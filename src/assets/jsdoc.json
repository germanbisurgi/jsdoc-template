[
    {
        "comment": "/**\n* This object represents one size of a photo or a [file](https://core.telegram.org/bots/api/#document)\n* / [sticker](https://core.telegram.org/bots/api/#sticker)\n* thumbnail.\n\n* @typedef {object} PhotoSize\n* @property {string} file_id Identifier for this file, which can be used to download or reuse the file\n* @property {string} file_unique_id Unique identifier for this file, which is supposed to be the same over time and\n*   for different bots. Can't be used to download or reuse the file.\n* @property {number} width Photo width\n* @property {number} height Photo height\n* @property {number} [file_size] *Optional*. File size in bytes\n* @see https://core.telegram.org/bots/api/#photosize\n*/",
        "meta": {
            "filename": "Alive.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "description": "This object represents one size of a photo or a [file](https://core.telegram.org/bots/api/#document)\n/ [sticker](https://core.telegram.org/bots/api/#sticker)\nthumbnail.",
        "kind": "typedef",
        "name": "PhotoSize",
        "type": {
            "names": [
                "object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Identifier for this file, which can be used to download or reuse the file",
                "name": "file_id"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Unique identifier for this file, which is supposed to be the same over time and\n  for different bots. Can't be used to download or reuse the file.",
                "name": "file_unique_id"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Photo width",
                "name": "width"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Photo height",
                "name": "height"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "description": "*Optional*. File size in bytes",
                "name": "file_size"
            }
        ],
        "see": [
            "https://core.telegram.org/bots/api/#photosize"
        ],
        "longname": "PhotoSize",
        "scope": "global"
    },
    {
        "comment": "/**\n * @summary\n * This is a short summary of the `Alive` class. These texts are just acting\n * as filler texts for summary.\n * \n * @class\n */",
        "meta": {
            "range": [
                842,
                2171
            ],
            "filename": "Alive.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000002",
                "name": "Alive",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "summary": "This is a short summary of the `Alive` class. These texts are just acting\nas filler texts for summary.",
        "kind": "class",
        "name": "Alive",
        "longname": "Alive",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                861,
                1422
            ],
            "filename": "Alive.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000005",
                "name": "Alive",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Alive",
        "longname": "Alive",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @summary\n * This is a short summary of the `Alive` class. These texts are just acting\n * as filler texts for summary.\n * \n * @class\n */",
        "meta": {
            "range": [
                842,
                2171
            ],
            "filename": "Alive.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000002",
                "name": "Alive",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Alive",
        "longname": "Alive",
        "kind": "class",
        "summary": "This is a short summary of the `Alive` class. These texts are just acting\nas filler texts for summary.",
        "scope": "global"
    },
    {
        "comment": "/**\n         * @summary\n         * amount of energy\n         * @property {Energy}\n         * @defaultvalue null\n         * \n         * @example\n         * world = this.world\n         * function test() {\n         *  return world\n         * }\n         * @alias AliveEnergy\n         */",
        "meta": {
            "range": [
                1176,
                1194
            ],
            "filename": "Alive.js",
            "lineno": 39,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000010",
                "name": "this.energy",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "summary": "amount of energy",
        "properties": [
            {
                "type": {
                    "names": [
                        "Energy"
                    ]
                }
            }
        ],
        "defaultvalue": "null",
        "examples": [
            "world = this.world\nfunction test() {\n return world\n}"
        ],
        "alias": "AliveEnergy",
        "name": "AliveEnergy",
        "longname": "AliveEnergy",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n         * This is a number array.\n         * @constant\n         * @type Object\n         * @default\n         */",
        "meta": {
            "range": [
                1328,
                1416
            ],
            "filename": "Alive.js",
            "lineno": 46,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000016",
                "name": "this.NUMBER_ARRAY",
                "type": "ObjectExpression",
                "value": "{\"google\":\"Google\",\"games\":\"Games\"}",
                "paramnames": []
            }
        },
        "description": "This is a number array.",
        "kind": "constant",
        "type": {
            "names": [
                "Object"
            ]
        },
        "defaultvalue": "{\"google\":\"Google\",\"games\":\"Games\"}",
        "defaultvaluetype": "object",
        "name": "NUMBER_ARRAY",
        "longname": "Alive#NUMBER_ARRAY",
        "memberof": "Alive",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1362,
                1378
            ],
            "filename": "Alive.js",
            "lineno": 47,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000021",
                "name": "google",
                "type": "Literal",
                "value": "Google"
            }
        },
        "undocumented": true,
        "name": "google",
        "longname": "Alive#NUMBER_ARRAY.google",
        "kind": "member",
        "memberof": "Alive#NUMBER_ARRAY",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1392,
                1406
            ],
            "filename": "Alive.js",
            "lineno": 48,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000023",
                "name": "games",
                "type": "Literal",
                "value": "Games"
            }
        },
        "undocumented": true,
        "name": "games",
        "longname": "Alive#NUMBER_ARRAY.games",
        "kind": "member",
        "memberof": "Alive#NUMBER_ARRAY",
        "scope": "static"
    },
    {
        "comment": "/**\n     * A constant.\n     * @readonly\n     * @deprecated This is no longer used\n     */",
        "meta": {
            "range": [
                1521,
                1529
            ],
            "filename": "Alive.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000025",
                "name": "FOO",
                "type": "ClassProperty"
            }
        },
        "description": "A constant.",
        "readonly": true,
        "deprecated": "This is no longer used",
        "name": "FOO",
        "longname": "Alive#FOO",
        "kind": "member",
        "memberof": "Alive",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @param {array<object|function|array|number|string|undefined|null|Symbol|boolean|Energy>} life This is an array of many things.\n     * @return {Energy} the energy wasted in this surviving instance\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu\n     * @method\n     * @deprecated\n     */",
        "meta": {
            "range": [
                1889,
                1931
            ],
            "filename": "Alive.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000027",
                "name": "Alive#survive",
                "type": "MethodDefinition",
                "paramnames": [
                    "life"
                ]
            },
            "vars": {
                "": null
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "array.<(object|function()|array|number|string|undefined|null|Symbol|boolean|Energy)>"
                    ]
                },
                "description": "This is an array of many things.",
                "name": "life"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Energy"
                    ]
                },
                "description": "the energy wasted in this surviving instance"
            }
        ],
        "tags": [
            {
                "originalTitle": "link",
                "title": "link",
                "text": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu",
                "value": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu"
            }
        ],
        "kind": "function",
        "deprecated": true,
        "name": "survive",
        "longname": "Alive#survive",
        "memberof": "Alive",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Text\n     * > Text\n     * \n     * \n     *```js\n     * code\n     *```\n     *\n     * \n     * > Note that commands are not matched in captions or in the middle of the text.\n     */",
        "meta": {
            "range": [
                2129,
                2169
            ],
            "filename": "Alive.js",
            "lineno": 80,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000034",
                "name": "Alive#gameQuery",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Text\n> Text\n\n\n```js\ncode\n```\n\n\n> Note that commands are not matched in captions or in the middle of the text.",
        "name": "gameQuery",
        "longname": "Alive#gameQuery",
        "kind": "function",
        "memberof": "Alive",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n * Options for ordering a delicious slice of pie.\n * @namespace\n */",
        "meta": {
            "range": [
                2249,
                2565
            ],
            "filename": "Alive.js",
            "lineno": 89,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000041",
                "name": "pieOptions",
                "type": "ObjectExpression",
                "value": "{\"plain\":\"pie\",\"aLaMode\":\"\",\"aNamespaceFunction\":\"\"}"
            }
        },
        "description": "Options for ordering a delicious slice of pie.",
        "kind": "namespace",
        "name": "pieOptions",
        "longname": "pieOptions",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n     * Plain.\n     */",
        "meta": {
            "range": [
                2298,
                2310
            ],
            "filename": "Alive.js",
            "lineno": 93,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000044",
                "name": "plain",
                "type": "Literal",
                "value": "pie"
            }
        },
        "description": "Plain.",
        "name": "plain",
        "longname": "pieOptions.plain",
        "kind": "member",
        "memberof": "pieOptions",
        "scope": "static"
    },
    {
        "comment": "/**\n     * A la mode.\n     * @readonly\n     */",
        "meta": {
            "range": [
                2367,
                2435
            ],
            "filename": "Alive.js",
            "lineno": 98,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000046",
                "name": "aLaMode",
                "paramnames": []
            }
        },
        "description": "A la mode.",
        "readonly": true,
        "name": "aLaMode",
        "longname": "pieOptions.aLaMode",
        "kind": "member",
        "memberof": "pieOptions",
        "scope": "static"
    },
    {
        "comment": "/**\n     * This is just a namespace functions.\n     * @param {number} args \n     */",
        "meta": {
            "range": [
                2530,
                2563
            ],
            "filename": "Alive.js",
            "lineno": 106,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000055",
                "name": "aNamespaceFunction",
                "type": "FunctionExpression"
            }
        },
        "description": "This is just a namespace functions.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "args"
            }
        ],
        "name": "aNamespaceFunction",
        "longname": "pieOptions.aNamespaceFunction",
        "kind": "function",
        "memberof": "pieOptions",
        "scope": "static"
    },
    {
        "comment": "/**\n * Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.\n * @class\n * @extends Alive\n */",
        "meta": {
            "range": [
                204,
                550
            ],
            "filename": "Apple.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000061",
                "name": "Apple",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.",
        "kind": "class",
        "augments": [
            "Alive"
        ],
        "name": "Apple",
        "longname": "Apple",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                236,
                388
            ],
            "filename": "Apple.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000065",
                "name": "Apple",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Apple",
        "longname": "Apple",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.\n * @class\n * @extends Alive\n */",
        "meta": {
            "range": [
                204,
                550
            ],
            "filename": "Apple.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000061",
                "name": "Apple",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Apple",
        "longname": "Apple",
        "kind": "class",
        "classdesc": "Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.",
        "augments": [
            "Alive"
        ],
        "scope": "global"
    },
    {
        "comment": "/**\n         * Donec imperdiet dignissim\n         * @type {String}\n         */",
        "meta": {
            "range": [
                364,
                381
            ],
            "filename": "Apple.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000073",
                "name": "this.color",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "Donec imperdiet dignissim",
        "type": {
            "names": [
                "String"
            ]
        },
        "name": "color",
        "longname": "Apple#color",
        "kind": "member",
        "memberof": "Apple",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Generate the Fibonacci sequence of numbers.\n     *\n     * @yields {number} The next number in the Fibonacci sequence.\n     */",
        "meta": {
            "range": [
                536,
                546
            ],
            "filename": "Apple.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000078",
                "name": "Apple#fib",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Generate the Fibonacci sequence of numbers.",
        "yields": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The next number in the Fibonacci sequence."
            }
        ],
        "name": "fib",
        "longname": "Apple#fib",
        "kind": "function",
        "memberof": "Apple",
        "scope": "instance",
        "params": [],
        "generator": true
    },
    {
        "comment": "/**\n * Sed vehicula purus dui\n * @event Apple#beEaten\n * @type {Energy}\n */",
        "meta": {
            "filename": "Apple.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "description": "Sed vehicula purus dui",
        "kind": "event",
        "name": "beEaten",
        "type": {
            "names": [
                "Energy"
            ]
        },
        "memberof": "Apple",
        "longname": "Apple#event:beEaten",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Generate the Fibonacci sequence of numbers.\n *\n * @yields {number} The next number in the Fibonacci sequence.\n */",
        "meta": {
            "range": [
                750,
                775
            ],
            "filename": "Apple.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000082",
                "name": "fibonacci",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Generate the Fibonacci sequence of numbers.",
        "yields": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The next number in the Fibonacci sequence."
            }
        ],
        "name": "fibonacci",
        "longname": "fibonacci",
        "kind": "function",
        "scope": "global",
        "params": [],
        "generator": true
    },
    {
        "comment": "/**\n * @typedef {Object} EnergyUnit\n * @property {String} foo kajsdh kajhsd\n * @property {Array<Array<String>>} hello aksjdh kaj shdkj asd\n */",
        "meta": {
            "filename": "Energy.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "EnergyUnit",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "kajsdh kajhsd",
                "name": "foo"
            },
            {
                "type": {
                    "names": [
                        "Array.<Array.<String>>"
                    ]
                },
                "description": "aksjdh kaj shdkj asd",
                "name": "hello"
            }
        ],
        "longname": "EnergyUnit",
        "scope": "global"
    },
    {
        "comment": "/**\n * An unit of energy . Curabitur sollicitudin porttitor turpis vitae rutrum. Mauris interdum neque id massa sollicitudin, fermentum facilisis erat commodo. In at purus a risus aliquam faucibus.\n * @class\n */",
        "meta": {
            "range": [
                212,
                502
            ],
            "filename": "Energy.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000087",
                "name": "Energy",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "An unit of energy . Curabitur sollicitudin porttitor turpis vitae rutrum. Mauris interdum neque id massa sollicitudin, fermentum facilisis erat commodo. In at purus a risus aliquam faucibus.",
        "kind": "class",
        "name": "Energy",
        "longname": "Energy",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                231,
                500
            ],
            "filename": "Energy.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000090",
                "name": "Energy",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Energy",
        "longname": "Energy",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * An unit of energy . Curabitur sollicitudin porttitor turpis vitae rutrum. Mauris interdum neque id massa sollicitudin, fermentum facilisis erat commodo. In at purus a risus aliquam faucibus.\n * @class\n */",
        "meta": {
            "range": [
                212,
                502
            ],
            "filename": "Energy.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000087",
                "name": "Energy",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Energy",
        "longname": "Energy",
        "kind": "class",
        "classdesc": "An unit of energy . Curabitur sollicitudin porttitor turpis vitae rutrum. Mauris interdum neque id massa sollicitudin, fermentum facilisis erat commodo. In at purus a risus aliquam faucibus.",
        "scope": "global"
    },
    {
        "comment": "/**\n\t\t * the amount of energy in this unit\n\t\t * @type {number}\n\t\t */",
        "meta": {
            "range": [
                332,
                350
            ],
            "filename": "Energy.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000095",
                "name": "this.amount",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "the amount of energy in this unit",
        "type": {
            "names": [
                "number"
            ]
        },
        "name": "amount",
        "longname": "Energy#amount",
        "kind": "member",
        "memberof": "Energy",
        "scope": "instance"
    },
    {
        "comment": "/**\n         * Mauris interdum neque {@link Environment} id massa\n         * @type {EnergyUnit}\n         */",
        "meta": {
            "range": [
                477,
                493
            ],
            "filename": "Energy.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000101",
                "name": "this.unit",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "Mauris interdum neque {@link Environment} id massa",
        "type": {
            "names": [
                "EnergyUnit"
            ]
        },
        "name": "unit",
        "longname": "Energy#unit",
        "kind": "member",
        "memberof": "Energy",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @typedef {Object} EnvironmentConfiguration\n * @property {String} name\n * @property {Map<String,Number>} strange\n */",
        "meta": {
            "filename": "Environment.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "EnvironmentConfiguration",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Map.<String, Number>"
                    ]
                },
                "name": "strange"
            }
        ],
        "longname": "EnvironmentConfiguration",
        "scope": "global"
    },
    {
        "comment": "/**\n * Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing el\n * @event Environment#beforeDestroy\n * @type {Energy}\n * @property {boolean} foo aalks djlas\n */",
        "meta": {
            "filename": "Environment.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "description": "Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing el",
        "kind": "event",
        "name": "beforeDestroy",
        "type": {
            "names": [
                "Energy"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "aalks djlas",
                "name": "foo"
            }
        ],
        "memberof": "Environment",
        "longname": "Environment#event:beforeDestroy",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing elit. Vestibulum condimentum tempus diam. Ut eget ultricies metus, vitae ornare turpis. Vivamus lectus metus, euismod quis tortor quis, pretium semper massa. Nulla mauris sapien, faucibus vitae metus et, ultrices fringilla sem. Sed laoreet tempor odio, elementum scelerisque nunc aliquet quis.\n *\n * @class\n */",
        "meta": {
            "range": [
                384,
                798
            ],
            "filename": "Environment.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000108",
                "name": "Environment",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing elit. Vestibulum condimentum tempus diam. Ut eget ultricies metus, vitae ornare turpis. Vivamus lectus metus, euismod quis tortor quis, pretium semper massa. Nulla mauris sapien, faucibus vitae metus et, ultrices fringilla sem. Sed laoreet tempor odio, elementum scelerisque nunc aliquet quis.",
        "kind": "class",
        "name": "Environment",
        "longname": "Environment",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                408,
                653
            ],
            "filename": "Environment.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000111",
                "name": "Environment",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Environment",
        "longname": "Environment",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing elit. Vestibulum condimentum tempus diam. Ut eget ultricies metus, vitae ornare turpis. Vivamus lectus metus, euismod quis tortor quis, pretium semper massa. Nulla mauris sapien, faucibus vitae metus et, ultrices fringilla sem. Sed laoreet tempor odio, elementum scelerisque nunc aliquet quis.\n *\n * @class\n */",
        "meta": {
            "range": [
                384,
                798
            ],
            "filename": "Environment.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000108",
                "name": "Environment",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Environment",
        "longname": "Environment",
        "kind": "class",
        "classdesc": "Lorem ipsum dolor sit amet, {@link Energy} consectetur adipiscing elit. Vestibulum condimentum tempus diam. Ut eget ultricies metus, vitae ornare turpis. Vivamus lectus metus, euismod quis tortor quis, pretium semper massa. Nulla mauris sapien, faucibus vitae metus et, ultrices fringilla sem. Sed laoreet tempor odio, elementum scelerisque nunc aliquet quis.",
        "scope": "global"
    },
    {
        "comment": "/**\n\t\t * All the living things in this environment\n\t\t * @type {Array<Alive>}\n\t\t */",
        "meta": {
            "range": [
                523,
                547
            ],
            "filename": "Environment.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000116",
                "name": "this.livingThings",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "All the living things in this environment",
        "type": {
            "names": [
                "Array.<Alive>"
            ]
        },
        "name": "livingThings",
        "longname": "Environment#livingThings",
        "kind": "member",
        "memberof": "Environment",
        "scope": "instance"
    },
    {
        "comment": "/**\n\t\t * The name of this environment\n\t\t * @type {String}\n\t\t */",
        "meta": {
            "range": [
                630,
                646
            ],
            "filename": "Environment.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000122",
                "name": "this.name",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "The name of this environment",
        "type": {
            "names": [
                "String"
            ]
        },
        "name": "name",
        "longname": "Environment#name",
        "kind": "member",
        "memberof": "Environment",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Vestibulum condimentum tempus {@link Alive} diam.\n\t * @param {EnvironmentConfiguration} config\n\t */",
        "meta": {
            "range": [
                774,
                796
            ],
            "filename": "Environment.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000127",
                "name": "Environment#start",
                "type": "MethodDefinition",
                "paramnames": [
                    "config"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Vestibulum condimentum tempus {@link Alive} diam.",
        "params": [
            {
                "type": {
                    "names": [
                        "EnvironmentConfiguration"
                    ]
                },
                "name": "config"
            }
        ],
        "name": "start",
        "longname": "Environment#start",
        "kind": "function",
        "memberof": "Environment",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Constructor should be hidden\n * @hideconstructor\n */",
        "meta": {
            "range": [
                60,
                240
            ],
            "filename": "HideConstructor.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000134",
                "name": "Test",
                "type": "ClassDeclaration",
                "paramnames": [
                    "hidemepls"
                ]
            }
        },
        "classdesc": "Constructor should be hidden",
        "hideconstructor": true,
        "name": "Test",
        "longname": "Test",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                141
            ],
            "filename": "HideConstructor.js",
            "lineno": 6,
            "columnno": 1,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000137",
                "name": "Test",
                "type": "MethodDefinition",
                "paramnames": [
                    "hidemepls"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Test",
        "longname": "Test",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Constructor should be hidden\n * @hideconstructor\n */",
        "meta": {
            "range": [
                60,
                240
            ],
            "filename": "HideConstructor.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000134",
                "name": "Test",
                "type": "ClassDeclaration",
                "paramnames": [
                    "hidemepls"
                ]
            }
        },
        "name": "Test",
        "longname": "Test",
        "kind": "class",
        "classdesc": "Constructor should be hidden",
        "hideconstructor": true,
        "scope": "global"
    },
    {
        "comment": "/**\n     * \n     * @param {TestConfigObject} config \n     */",
        "meta": {
            "range": [
                216,
                238
            ],
            "filename": "HideConstructor.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000148",
                "name": "Test#start",
                "type": "MethodDefinition",
                "paramnames": [
                    "config"
                ]
            },
            "vars": {
                "": null
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "TestConfigObject"
                    ]
                },
                "name": "config"
            }
        ],
        "name": "start",
        "longname": "Test#start",
        "kind": "function",
        "memberof": "Test",
        "scope": "instance"
    },
    {
        "comment": "/** @module color/mixer */",
        "meta": {
            "filename": "Modules.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "module",
        "name": "color/mixer",
        "longname": "module:color/mixer"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27,
                257
            ],
            "filename": "Modules.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000156",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"blend\":\"\",\"fib\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "module:color/mixer",
        "longname": "module:color/mixer",
        "kind": "member"
    },
    {
        "comment": "/** Blend two `colours` together. */",
        "meta": {
            "range": [
                91,
                127
            ],
            "filename": "Modules.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000161",
                "name": "blend",
                "type": "FunctionExpression"
            }
        },
        "description": "Blend two `colours` together.",
        "name": "blend",
        "longname": "module:color/mixer.blend",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** Generator example\n     * @yields {string} A `string` object, which *may* be empty\n     */",
        "meta": {
            "range": [
                231,
                255
            ],
            "filename": "Modules.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000166",
                "name": "fib",
                "type": "FunctionExpression",
                "value": "gen"
            }
        },
        "description": "Generator example",
        "yields": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A `string` object, which *may* be empty"
            }
        ],
        "name": "fib",
        "longname": "module:color/mixer.fib",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** Class that represents a colour */",
        "meta": {
            "range": [
                298,
                509
            ],
            "filename": "Modules.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000170",
                "name": "Colour",
                "type": "ClassDeclaration",
                "paramnames": [
                    "red",
                    "green",
                    "blue"
                ]
            }
        },
        "classdesc": "Class that represents a colour",
        "name": "Colour",
        "longname": "module:color/mixer~Colour",
        "kind": "class",
        "scope": "inner",
        "memberof": "module:color/mixer",
        "undocumented": true
    },
    {
        "comment": "/** Create colour from rgb */",
        "meta": {
            "range": [
                351,
                507
            ],
            "filename": "Modules.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000173",
                "name": "Colour",
                "type": "MethodDefinition",
                "paramnames": [
                    "red",
                    "green",
                    "blue"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create colour from rgb",
        "name": "Colour",
        "longname": "module:color/mixer~Colour",
        "kind": "class",
        "memberof": "module:color/mixer",
        "scope": "inner",
        "params": [],
        "undocumented": true
    },
    {
        "comment": "/** Class that represents a colour */",
        "meta": {
            "range": [
                298,
                509
            ],
            "filename": "Modules.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000170",
                "name": "Colour",
                "type": "ClassDeclaration",
                "paramnames": [
                    "red",
                    "green",
                    "blue"
                ]
            }
        },
        "name": "Colour",
        "longname": "module:color/mixer~Colour",
        "kind": "class",
        "classdesc": "Class that represents a colour",
        "scope": "inner",
        "memberof": "module:color/mixer",
        "description": "Create colour from rgb"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                395,
                437
            ],
            "filename": "Modules.js",
            "lineno": 15,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000181",
                "name": "hex",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "hex",
        "longname": "<anonymous>~hex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                447,
                500
            ],
            "filename": "Modules.js",
            "lineno": 16,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000196",
                "name": "this.hex",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "hex",
        "longname": "module:color/mixer~Colour#hex",
        "kind": "member",
        "memberof": "module:color/mixer~Colour",
        "scope": "instance"
    },
    {
        "comment": "/** Darkens a color. */",
        "meta": {
            "range": [
                535,
                579
            ],
            "filename": "Modules.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000215",
                "name": "exports.darken",
                "type": "FunctionExpression",
                "paramnames": [
                    "color",
                    "shade"
                ]
            }
        },
        "description": "Darkens a color.",
        "name": "darken",
        "longname": "module:color/mixer.darken",
        "kind": "function",
        "memberof": "module:color/mixer",
        "scope": "static"
    },
    {
        "comment": "/** @module bookshelf */",
        "meta": {
            "filename": "Modules.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "module",
        "name": "bookshelf",
        "longname": "module:bookshelf",
        "scope": "inner",
        "memberof": "module:color/mixer"
    },
    {
        "comment": "/** @class */",
        "meta": {
            "range": [
                621,
                699
            ],
            "filename": "Modules.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000224",
                "name": "this.Book",
                "type": "FunctionExpression",
                "paramnames": [
                    "title"
                ]
            },
            "vars": {
                "this.title": "module:bookshelf.Book#title"
            }
        },
        "kind": "class",
        "name": "Book",
        "longname": "module:bookshelf.Book",
        "memberof": "module:bookshelf",
        "scope": "static"
    },
    {
        "comment": "/** The title. */",
        "meta": {
            "range": [
                678,
                696
            ],
            "filename": "Modules.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000232",
                "name": "this.title",
                "type": "Identifier",
                "value": "title",
                "paramnames": []
            }
        },
        "description": "The title.",
        "name": "title",
        "longname": "module:bookshelf.Book#title",
        "kind": "member",
        "memberof": "module:bookshelf.Book",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                1598
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000239",
                "name": "create_public_interface",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "map": "create_public_interface~map",
                "map.start": "obj.map.map.start",
                "": null,
                "map.start9": "obj.map.aliasOfStart9",
                "map.start1": "obj.map.map.start1",
                "map.start2": "obj.map.map.start2",
                "map.start3": "obj.map.map.start3",
                "map.start4": "obj.map.map.start4",
                "map.start5": "obj.map.map.start5",
                "map.start6": "obj.map.map.start6",
                "map.start7": "obj.map.map.start7",
                "map.start8": "obj.map.map.start8",
                "map.start0": "obj.map.map.start0"
            }
        },
        "undocumented": true,
        "name": "create_public_interface",
        "longname": "create_public_interface",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n     * @namespace obj.map\n     */",
        "meta": {
            "filename": "NamespaceWithAlias.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "namespace",
        "name": "map",
        "memberof": "obj",
        "longname": "obj.map",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                92,
                105
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 5,
            "columnno": 10,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000244",
                "name": "map",
                "type": "MemberExpression",
                "value": "obj.map"
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "create_public_interface~map",
        "kind": "constant",
        "memberof": "create_public_interface",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                211,
                237
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000250",
                "name": "map.start",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start",
        "longname": "obj.map.map.start",
        "scope": "static"
    },
    {
        "comment": "/**\n     * This is an alias. It's original name is start9\n     * @memberOf obj.map\n     * @function\n     * @alias obj.map.aliasOfStart9\n     */",
        "meta": {
            "range": [
                390,
                417
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000257",
                "name": "map.start9",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "This is an alias. It's original name is start9",
        "memberof": "obj.map",
        "kind": "function",
        "alias": "obj.map.aliasOfStart9",
        "name": "aliasOfStart9",
        "longname": "obj.map.aliasOfStart9",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                521,
                548
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000264",
                "name": "map.start1",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start1",
        "longname": "obj.map.map.start1",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                652,
                679
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000271",
                "name": "map.start2",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start2",
        "longname": "obj.map.map.start2",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                783,
                810
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000278",
                "name": "map.start3",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start3",
        "longname": "obj.map.map.start3",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                914,
                941
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000285",
                "name": "map.start4",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start4",
        "longname": "obj.map.map.start4",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                1045,
                1072
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 49,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000292",
                "name": "map.start5",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start5",
        "longname": "obj.map.map.start5",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                1176,
                1203
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 55,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000299",
                "name": "map.start6",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start6",
        "longname": "obj.map.map.start6",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                1307,
                1334
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 61,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000306",
                "name": "map.start7",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start7",
        "longname": "obj.map.map.start7",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                1438,
                1465
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 67,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000313",
                "name": "map.start8",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start8",
        "longname": "obj.map.map.start8",
        "scope": "static"
    },
    {
        "comment": "/**\n     * Sample function that does nothing\n     * @memberOf obj.map\n     * @function\n     */",
        "meta": {
            "range": [
                1569,
                1596
            ],
            "filename": "NamespaceWithAlias.js",
            "lineno": 73,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000320",
                "name": "map.start0",
                "type": "FunctionExpression",
                "funcscope": "create_public_interface",
                "paramnames": []
            }
        },
        "description": "Sample function that does nothing",
        "memberof": "obj.map",
        "kind": "function",
        "name": "map.start0",
        "longname": "obj.map.map.start0",
        "scope": "static"
    },
    {
        "comment": "/**\n * Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.\n * @class\n * @extends Alive\n */",
        "meta": {
            "range": [
                204,
                636
            ],
            "filename": "Tree.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000328",
                "name": "Tree",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.",
        "kind": "class",
        "augments": [
            "Alive"
        ],
        "name": "Tree",
        "longname": "Tree",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                235,
                378
            ],
            "filename": "Tree.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000332",
                "name": "Tree",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "Tree",
        "longname": "Tree",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.\n * @class\n * @extends Alive\n */",
        "meta": {
            "range": [
                204,
                636
            ],
            "filename": "Tree.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000328",
                "name": "Tree",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "name": "Tree",
        "longname": "Tree",
        "kind": "class",
        "classdesc": "Donec imperdiet dignissim semper. Sed vehicula purus dui, eget porta lectus convallis sagittis. Suspendisse ac lectus dignissim, tincidunt nisi quis, gravida metus.",
        "augments": [
            "Alive"
        ],
        "scope": "global"
    },
    {
        "comment": "/**\n\t\t * Donec imperdiet dignissim\n\t\t * @type {Array<Alive>}\n\t\t */",
        "meta": {
            "range": [
                351,
                371
            ],
            "filename": "Tree.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000340",
                "name": "this.branches",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "description": "Donec imperdiet dignissim",
        "type": {
            "names": [
                "Array.<Alive>"
            ]
        },
        "name": "branches",
        "longname": "Tree#branches",
        "kind": "member",
        "memberof": "Tree",
        "scope": "instance"
    },
    {
        "comment": "/**\n\t * @param {Environment} environment the environment when this Alive thing is surviving\n\t * @return {Energy} the energy wasted in this surviving instance\n\t * @method\n\t * @fires Tree.crop\n\t * @Throws Err\n\t */",
        "meta": {
            "range": [
                599,
                634
            ],
            "filename": "Tree.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000345",
                "name": "Tree#crop",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "params": [
            {
                "type": {
                    "names": [
                        "Environment"
                    ]
                },
                "description": "the environment when this Alive thing is surviving",
                "name": "environment"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Energy"
                    ]
                },
                "description": "the energy wasted in this surviving instance"
            }
        ],
        "kind": "function",
        "fires": [
            "Tree.event:crop"
        ],
        "exceptions": [
            {
                "description": "Err"
            }
        ],
        "name": "crop",
        "longname": "Tree#crop",
        "memberof": "Tree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @typedef {Object} WorldOptions\n * @property {number} minX Min world patch x integer value\n * @property {number} minY Min world patch y integer value\n * @property {number} minZ Min world patch z integer value\n * @property {number} maxX Max world patch x integer value\n * @property {number} maxY Max world patch y integer value\n * @property {number} maxZ Max world patch z integer value\n */",
        "meta": {
            "filename": "World.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "access": "private",
        "kind": "typedef",
        "name": "WorldOptions",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Min world patch x integer value",
                "name": "minX"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Min world patch y integer value",
                "name": "minY"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Min world patch z integer value",
                "name": "minZ"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Max world patch x integer value",
                "name": "maxX"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Max world patch y integer value",
                "name": "maxY"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Max world patch z integer value",
                "name": "maxZ"
            }
        ],
        "longname": "WorldOptions",
        "scope": "global"
    },
    {
        "comment": "/**\n * Class World defines the coordinate system for the model.\n * It has transforms for multiple coordinate systems.\n *\n * The world is defined by an object with 6 properties:\n *\n *          WorldOptions = {\n *              minX: integer,\n *              maxX: integer,\n *              minY: integer,\n *              maxY: integer,\n *              minZ: integer,\n *              maxZ: integer,\n *          }\n */",
        "meta": {
            "range": [
                1074,
                1869
            ],
            "filename": "World.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000357",
                "name": "World",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "classdesc": "Class World defines the coordinate system for the model.\nIt has transforms for multiple coordinate systems.\n\nThe world is defined by an object with 6 properties:\n\n         WorldOptions = {\n             minX: integer,\n             maxX: integer,\n             minY: integer,\n             maxY: integer,\n             minZ: integer,\n             maxZ: integer,\n         }",
        "name": "World",
        "longname": "World",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1092,
                1101
            ],
            "filename": "World.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000360",
                "name": "maxX",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "maxX",
        "longname": "World#maxX",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1106,
                1116
            ],
            "filename": "World.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000362",
                "name": "minX",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "minX",
        "longname": "World#minX",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1121,
                1130
            ],
            "filename": "World.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000365",
                "name": "maxY",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "maxY",
        "longname": "World#maxY",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1135,
                1145
            ],
            "filename": "World.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000367",
                "name": "minY",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "minY",
        "longname": "World#minY",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1150,
                1158
            ],
            "filename": "World.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000370",
                "name": "maxZ",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "maxZ",
        "longname": "World#maxZ",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1163,
                1171
            ],
            "filename": "World.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000372",
                "name": "minZ",
                "type": "ClassProperty"
            }
        },
        "undocumented": true,
        "name": "minZ",
        "longname": "World#minZ",
        "kind": "member",
        "memberof": "World",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * Return a default options object, origin at center.\n     *\n     * @param {number} [maxX=16] Integer max X value\n     * @param {number} [maxY=maxX] Integer max Y value\n     * @param {number} [maxZ=Math.max(maxX, maxY)] Integer max Z value\n     * @returns WorldOptions\n     */",
        "meta": {
            "range": [
                1501,
                1867
            ],
            "filename": "World.js",
            "lineno": 53,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000374",
                "name": "World.defaultOptions",
                "type": "MethodDefinition",
                "paramnames": [
                    "maxX",
                    "maxY",
                    "maxZ"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Return a default options object, origin at center.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 16,
                "description": "Integer max X value",
                "name": "maxX"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "maxX",
                "description": "Integer max Y value",
                "name": "maxY"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "Math.max(maxX, maxY)",
                "description": "Integer max Z value",
                "name": "maxZ"
            }
        ],
        "returns": [
            {
                "description": "WorldOptions"
            }
        ],
        "name": "defaultOptions",
        "longname": "World.defaultOptions",
        "kind": "function",
        "memberof": "World",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1676,
                1687
            ],
            "filename": "World.js",
            "lineno": 56,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000394",
                "name": "minX",
                "type": "UnaryExpression",
                "value": "-maxX"
            }
        },
        "undocumented": true,
        "name": "minX",
        "longname": "minX",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1701,
                1711
            ],
            "filename": "World.js",
            "lineno": 57,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000397",
                "name": "maxX",
                "type": "Identifier",
                "value": "maxX"
            }
        },
        "undocumented": true,
        "name": "maxX",
        "longname": "maxX",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1725,
                1736
            ],
            "filename": "World.js",
            "lineno": 58,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000399",
                "name": "minY",
                "type": "UnaryExpression",
                "value": "-maxY"
            }
        },
        "undocumented": true,
        "name": "minY",
        "longname": "minY",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1750,
                1760
            ],
            "filename": "World.js",
            "lineno": 59,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000402",
                "name": "maxY",
                "type": "Identifier",
                "value": "maxY"
            }
        },
        "undocumented": true,
        "name": "maxY",
        "longname": "maxY",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1774,
                1802
            ],
            "filename": "World.js",
            "lineno": 60,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000404",
                "name": "minZ",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "minZ",
        "longname": "minZ",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1840,
                1850
            ],
            "filename": "World.js",
            "lineno": 61,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000412",
                "name": "maxZ",
                "type": "Identifier",
                "value": "maxZ"
            }
        },
        "undocumented": true,
        "name": "maxZ",
        "longname": "maxZ",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @typedef {{Database:Database, Statement:Statement}} SqlJs\n * @property {Database} Database A class that represents an SQLite database\n * @property {Statement} Statement The prepared statement class\n */",
        "meta": {
            "filename": "api.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "SqlJs",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "A class that represents an SQLite database",
                "name": "Database"
            },
            {
                "type": {
                    "names": [
                        "Statement"
                    ]
                },
                "description": "The prepared statement class",
                "name": "Statement"
            }
        ],
        "longname": "SqlJs",
        "scope": "global"
    },
    {
        "comment": "/**\n * @typedef {{locateFile:function(string):string}} SqlJsConfig\n * @property {function(string):string} locateFile\n * a function that returns the full path to a resource given its file name\n * @see https://emscripten.org/docs/api_reference/module.html\n */",
        "meta": {
            "filename": "api.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "SqlJsConfig",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "a function that returns the full path to a resource given its file name",
                "name": "locateFile"
            }
        ],
        "see": [
            "https://emscripten.org/docs/api_reference/module.html"
        ],
        "longname": "SqlJsConfig",
        "scope": "global"
    },
    {
        "comment": "/**\n * Asynchronously initializes sql.js\n * @function initSqlJs\n * @param {SqlJsConfig} config module initialization parameters\n * @returns {SqlJs}\n * @example\n * initSqlJs({\n *  locateFile: name => '/path/to/assets/' + name\n * }).then(SQL => {\n *  const db = new SQL.Database();\n *  const result = db.exec(\"select 'hello world'\");\n *  console.log(result);\n * })\n */",
        "meta": {
            "filename": "api.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "description": "Asynchronously initializes sql.js",
        "kind": "function",
        "name": "initSqlJs",
        "params": [
            {
                "type": {
                    "names": [
                        "SqlJsConfig"
                    ]
                },
                "description": "module initialization parameters",
                "name": "config"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "SqlJs"
                    ]
                }
            }
        ],
        "examples": [
            "initSqlJs({\n locateFile: name => '/path/to/assets/' + name\n}).then(SQL => {\n const db = new SQL.Database();\n const result = db.exec(\"select 'hello world'\");\n console.log(result);\n})"
        ],
        "longname": "initSqlJs",
        "scope": "global"
    },
    {
        "comment": "/**\n * @module SqlJs\n */",
        "meta": {
            "filename": "api.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "module",
        "name": "SqlJs",
        "longname": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1236,
                40075
            ],
            "filename": "api.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000419",
                "name": "Module[\"onRuntimeInitialized\"]",
                "type": "FunctionExpression",
                "value": "onRuntimeInitialized",
                "paramnames": []
            },
            "vars": {
                "apiTemp": "module:SqlJs~Module.\"onRuntimeInitialized\"~apiTemp",
                "cwrap": "module:SqlJs~Module.\"onRuntimeInitialized\"~cwrap",
                "NULL": "module:SqlJs~Module.\"onRuntimeInitialized\"~NULL",
                "SQLITE_OK": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_OK",
                "SQLITE_ROW": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_ROW",
                "SQLITE_DONE": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_DONE",
                "SQLITE_INTEGER": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_INTEGER",
                "SQLITE_FLOAT": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_FLOAT",
                "SQLITE_TEXT": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_TEXT",
                "SQLITE_BLOB": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_BLOB",
                "SQLITE_UTF8": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_UTF8",
                "sqlite3_open": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_open",
                "sqlite3_close_v2": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_close_v2",
                "sqlite3_exec": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_exec",
                "sqlite3_changes": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_changes",
                "sqlite3_prepare_v2": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_prepare_v2",
                "sqlite3_sql": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_sql",
                "sqlite3_normalized_sql": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_normalized_sql",
                "sqlite3_prepare_v2_sqlptr": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_prepare_v2_sqlptr",
                "sqlite3_bind_text": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_text",
                "sqlite3_bind_blob": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_blob",
                "sqlite3_bind_double": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_double",
                "sqlite3_bind_int": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_int",
                "sqlite3_bind_parameter_index": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_parameter_index",
                "sqlite3_step": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_step",
                "sqlite3_errmsg": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_errmsg",
                "sqlite3_column_count": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_count",
                "sqlite3_data_count": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_data_count",
                "sqlite3_column_double": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_double",
                "sqlite3_column_text": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_text",
                "sqlite3_column_blob": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_blob",
                "sqlite3_column_bytes": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_bytes",
                "sqlite3_column_type": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_type",
                "sqlite3_column_name": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_name",
                "sqlite3_reset": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_reset",
                "sqlite3_clear_bindings": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_clear_bindings",
                "sqlite3_finalize": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_finalize",
                "sqlite3_create_function_v2": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_create_function_v2",
                "sqlite3_value_type": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_type",
                "sqlite3_value_bytes": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_bytes",
                "sqlite3_value_text": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_text",
                "sqlite3_value_blob": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_blob",
                "sqlite3_value_double": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_double",
                "sqlite3_result_double": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_double",
                "sqlite3_result_null": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_null",
                "sqlite3_result_text": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_text",
                "sqlite3_result_blob": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_blob",
                "sqlite3_result_int": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_int",
                "sqlite3_result_error": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_error",
                "registerExtensionFunctions": "module:SqlJs~Module.\"onRuntimeInitialized\"~registerExtensionFunctions",
                "Statement": "Statement",
                "Statement.prototype[\"bind\"]": "Statement#[\"bind\"]",
                "": null,
                "Statement.prototype[\"step\"]": "Statement#[\"step\"]",
                "Statement.prototype.getNumber": "Statement#getNumber",
                "Statement.prototype.getString": "Statement#getString",
                "Statement.prototype.getBlob": "Statement#getBlob",
                "Statement.prototype[\"get\"]": "Statement#[\"get\"]",
                "Statement.prototype[\"getColumnNames\"]": "Statement#[\"getColumnNames\"]",
                "Statement.prototype[\"getAsObject\"]": "Statement#[\"getAsObject\"]",
                "Statement.prototype[\"getSQL\"]": "Statement#[\"getSQL\"]",
                "Statement.prototype[\"getNormalizedSQL\"]": "Statement#[\"getNormalizedSQL\"]",
                "Statement.prototype[\"run\"]": "Statement#[\"run\"]",
                "Statement.prototype.bindString": "Statement#bindString",
                "Statement.prototype.bindBlob": "Statement#bindBlob",
                "Statement.prototype.bindNumber": "Statement#bindNumber",
                "Statement.prototype.bindNull": "Statement#bindNull",
                "Statement.prototype.bindValue": "Statement#bindValue",
                "Statement.prototype.bindFromObject": "Statement#bindFromObject",
                "Statement.prototype.bindFromArray": "Statement#bindFromArray",
                "Statement.prototype[\"reset\"]": "Statement#[\"reset\"]",
                "Statement.prototype[\"freemem\"]": "Statement#[\"freemem\"]",
                "Statement.prototype[\"free\"]": "Statement#[\"free\"]",
                "StatementIterator": "StatementIterator",
                "StatementIterator.prototype[\"next\"]": "StatementIterator#[\"next\"]",
                "StatementIterator.prototype.finalize": "StatementIterator#finalize",
                "StatementIterator.prototype[\"getRemainingSQL\"]": "StatementIterator#[\"getRemainingSQL\"]",
                "StatementIterator.prototype[undefined]": "StatementIterator#[undefined]",
                "Database": "Database",
                "Database.prototype[\"run\"]": "Database#[\"run\"]",
                "Database.prototype[\"exec\"]": "Database#[\"exec\"]",
                "Database.prototype[\"each\"]": "Database#[\"each\"]",
                "Database.prototype[\"prepare\"]": "Database#[\"prepare\"]",
                "Database.prototype[\"iterateStatements\"]": "Database#[\"iterateStatements\"]",
                "Database.prototype[\"export\"]": "Database#[\"export\"]",
                "Database.prototype[\"close\"]": "Database#[\"close\"]",
                "Database.prototype[\"handleError\"]": "Database#[\"handleError\"]",
                "Database.prototype[\"getRowsModified\"]": "Database#[\"getRowsModified\"]",
                "Database.prototype[\"create_function\"]": "Database#[\"create_function\"]",
                "Module.Database": "module:SqlJs~Module.Database"
            }
        },
        "undocumented": true,
        "name": "\"onRuntimeInitialized\"",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "kind": "function",
        "scope": "static",
        "memberof": "module:SqlJs~Module"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1394,
                1417
            ],
            "filename": "api.js",
            "lineno": 55,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000427",
                "name": "apiTemp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apiTemp",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~apiTemp",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1427,
                1450
            ],
            "filename": "api.js",
            "lineno": 56,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000433",
                "name": "cwrap",
                "type": "MemberExpression",
                "value": "Module[\"cwrap\"]"
            }
        },
        "undocumented": true,
        "name": "cwrap",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~cwrap",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1480,
                1488
            ],
            "filename": "api.js",
            "lineno": 58,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000439",
                "name": "NULL",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "NULL",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~NULL",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1517,
                1530
            ],
            "filename": "api.js",
            "lineno": 60,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000443",
                "name": "SQLITE_OK",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "SQLITE_OK",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_OK",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1540,
                1556
            ],
            "filename": "api.js",
            "lineno": 61,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000447",
                "name": "SQLITE_ROW",
                "type": "Literal",
                "value": 100
            }
        },
        "undocumented": true,
        "name": "SQLITE_ROW",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_ROW",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1566,
                1583
            ],
            "filename": "api.js",
            "lineno": 62,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000451",
                "name": "SQLITE_DONE",
                "type": "Literal",
                "value": 101
            }
        },
        "undocumented": true,
        "name": "SQLITE_DONE",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_DONE",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1593,
                1611
            ],
            "filename": "api.js",
            "lineno": 63,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000455",
                "name": "SQLITE_INTEGER",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "SQLITE_INTEGER",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_INTEGER",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1621,
                1637
            ],
            "filename": "api.js",
            "lineno": 64,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000459",
                "name": "SQLITE_FLOAT",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "SQLITE_FLOAT",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_FLOAT",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1647,
                1662
            ],
            "filename": "api.js",
            "lineno": 65,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000463",
                "name": "SQLITE_TEXT",
                "type": "Literal",
                "value": 3
            }
        },
        "undocumented": true,
        "name": "SQLITE_TEXT",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_TEXT",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1672,
                1687
            ],
            "filename": "api.js",
            "lineno": 66,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000467",
                "name": "SQLITE_BLOB",
                "type": "Literal",
                "value": 4
            }
        },
        "undocumented": true,
        "name": "SQLITE_BLOB",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_BLOB",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1753,
                1768
            ],
            "filename": "api.js",
            "lineno": 68,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000471",
                "name": "SQLITE_UTF8",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "SQLITE_UTF8",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~SQLITE_UTF8",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1806,
                1874
            ],
            "filename": "api.js",
            "lineno": 70,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000475",
                "name": "sqlite3_open",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_open",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_open",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1884,
                1950
            ],
            "filename": "api.js",
            "lineno": 71,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000485",
                "name": "sqlite3_close_v2",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_close_v2",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_close_v2",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1960,
                2088
            ],
            "filename": "api.js",
            "lineno": 72,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000494",
                "name": "sqlite3_exec",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_exec",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_exec",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2098,
                2162
            ],
            "filename": "api.js",
            "lineno": 77,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000507",
                "name": "sqlite3_changes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_changes",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_changes",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2172,
                2312
            ],
            "filename": "api.js",
            "lineno": 78,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000516",
                "name": "sqlite3_prepare_v2",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_prepare_v2",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_prepare_v2",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2322,
                2378
            ],
            "filename": "api.js",
            "lineno": 83,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000529",
                "name": "sqlite3_sql",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_sql",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_sql",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2388,
                2496
            ],
            "filename": "api.js",
            "lineno": 84,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000538",
                "name": "sqlite3_normalized_sql",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_normalized_sql",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_normalized_sql",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2506,
                2653
            ],
            "filename": "api.js",
            "lineno": 89,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000547",
                "name": "sqlite3_prepare_v2_sqlptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_prepare_v2_sqlptr",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_prepare_v2_sqlptr",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2663,
                2801
            ],
            "filename": "api.js",
            "lineno": 94,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000560",
                "name": "sqlite3_bind_text",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_bind_text",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_text",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2811,
                2949
            ],
            "filename": "api.js",
            "lineno": 99,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000573",
                "name": "sqlite3_bind_blob",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_bind_blob",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_blob",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2959,
                3081
            ],
            "filename": "api.js",
            "lineno": 104,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000586",
                "name": "sqlite3_bind_double",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_bind_double",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_double",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3091,
                3207
            ],
            "filename": "api.js",
            "lineno": 109,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000597",
                "name": "sqlite3_bind_int",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_bind_int",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_int",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3217,
                3347
            ],
            "filename": "api.js",
            "lineno": 114,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000608",
                "name": "sqlite3_bind_parameter_index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_bind_parameter_index",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_bind_parameter_index",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3357,
                3415
            ],
            "filename": "api.js",
            "lineno": 119,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000618",
                "name": "sqlite3_step",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_step",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_step",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3425,
                3487
            ],
            "filename": "api.js",
            "lineno": 120,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000627",
                "name": "sqlite3_errmsg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_errmsg",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_errmsg",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3497,
                3601
            ],
            "filename": "api.js",
            "lineno": 121,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000636",
                "name": "sqlite3_column_count",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_count",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_count",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3611,
                3681
            ],
            "filename": "api.js",
            "lineno": 126,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000645",
                "name": "sqlite3_data_count",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_data_count",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_data_count",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3691,
                3807
            ],
            "filename": "api.js",
            "lineno": 127,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000654",
                "name": "sqlite3_column_double",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_double",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_double",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3817,
                3929
            ],
            "filename": "api.js",
            "lineno": 132,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000664",
                "name": "sqlite3_column_text",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_text",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_text",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3939,
                4051
            ],
            "filename": "api.js",
            "lineno": 137,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000674",
                "name": "sqlite3_column_blob",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_blob",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_blob",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4061,
                4175
            ],
            "filename": "api.js",
            "lineno": 142,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000684",
                "name": "sqlite3_column_bytes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_bytes",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_bytes",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4185,
                4297
            ],
            "filename": "api.js",
            "lineno": 147,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000694",
                "name": "sqlite3_column_type",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_type",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_type",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4307,
                4419
            ],
            "filename": "api.js",
            "lineno": 152,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000704",
                "name": "sqlite3_column_name",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_column_name",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_column_name",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4429,
                4489
            ],
            "filename": "api.js",
            "lineno": 157,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000714",
                "name": "sqlite3_reset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_reset",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_reset",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4499,
                4607
            ],
            "filename": "api.js",
            "lineno": 158,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000723",
                "name": "sqlite3_clear_bindings",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_clear_bindings",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_clear_bindings",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4617,
                4683
            ],
            "filename": "api.js",
            "lineno": 163,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000732",
                "name": "sqlite3_finalize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_finalize",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_finalize",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4693,
                5007
            ],
            "filename": "api.js",
            "lineno": 164,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000741",
                "name": "sqlite3_create_function_v2",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_create_function_v2",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_create_function_v2",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5017,
                5087
            ],
            "filename": "api.js",
            "lineno": 179,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000758",
                "name": "sqlite3_value_type",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_value_type",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_type",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5097,
                5199
            ],
            "filename": "api.js",
            "lineno": 180,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000767",
                "name": "sqlite3_value_bytes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_value_bytes",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_bytes",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5209,
                5279
            ],
            "filename": "api.js",
            "lineno": 185,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000776",
                "name": "sqlite3_value_text",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_value_text",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_text",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5289,
                5359
            ],
            "filename": "api.js",
            "lineno": 186,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000785",
                "name": "sqlite3_value_blob",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_value_blob",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_blob",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5369,
                5473
            ],
            "filename": "api.js",
            "lineno": 187,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000794",
                "name": "sqlite3_value_double",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_value_double",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_value_double",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5483,
                5593
            ],
            "filename": "api.js",
            "lineno": 192,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000803",
                "name": "sqlite3_result_double",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_double",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_double",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5603,
                5699
            ],
            "filename": "api.js",
            "lineno": 197,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000813",
                "name": "sqlite3_result_null",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_null",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_null",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5709,
                5835
            ],
            "filename": "api.js",
            "lineno": 202,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000822",
                "name": "sqlite3_result_text",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_text",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_text",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5845,
                5971
            ],
            "filename": "api.js",
            "lineno": 207,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000834",
                "name": "sqlite3_result_blob",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_blob",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_blob",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5981,
                6085
            ],
            "filename": "api.js",
            "lineno": 212,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000846",
                "name": "sqlite3_result_int",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_int",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_int",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6095,
                6213
            ],
            "filename": "api.js",
            "lineno": 217,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000856",
                "name": "sqlite3_result_error",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sqlite3_result_error",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~sqlite3_result_error",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6223,
                6339
            ],
            "filename": "api.js",
            "lineno": 222,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000867",
                "name": "registerExtensionFunctions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "registerExtensionFunctions",
        "longname": "module:SqlJs~Module.\"onRuntimeInitialized\"~registerExtensionFunctions",
        "kind": "member",
        "memberof": "module:SqlJs~Module.\"onRuntimeInitialized\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n    * @classdesc\n    * Represents a prepared statement.\n    * Prepared statements allow you to have a template sql string,\n    * that you can execute multiple times with different parameters.\n    *\n    * You can't instantiate this class directly, you have to use a\n    * {@link Database} object in order to create a statement.\n    *\n    * **Warning**: When you close a database (using db.close()),\n    * all its statements are closed too and become unusable.\n    *\n    * Statements can't be created by the API user directly, only by\n    * Database::prepare\n    *\n    * @see Database.html#prepare-dynamic\n    * @see https://en.wikipedia.org/wiki/Prepared_statement\n    *\n    * @constructs Statement\n    * @memberof module:SqlJs\n    * @param {number} stmt1 The SQLite statement reference\n    * @param {Database} db The database from which this statement was created\n     */",
        "meta": {
            "range": [
                7225,
                7519
            ],
            "filename": "api.js",
            "lineno": 250,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000875",
                "name": "Statement",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "stmt1",
                    "db"
                ]
            },
            "vars": {
                "this.stmt": "Statement#stmt",
                "this.db": "Statement#db",
                "this.pos": "Statement#pos",
                "this.allocatedmem": "Statement#allocatedmem"
            }
        },
        "classdesc": "Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.\n\nYou can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.\n\n**Warning**: When you close a database (using db.close()),\nall its statements are closed too and become unusable.\n\nStatements can't be created by the API user directly, only by\nDatabase::prepare",
        "see": [
            "Database.html#prepare-dynamic",
            "https://en.wikipedia.org/wiki/Prepared_statement"
        ],
        "alias": "Statement",
        "kind": "class",
        "memberof": "module:SqlJs",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The SQLite statement reference",
                "name": "stmt1"
            },
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "The database from which this statement was created",
                "name": "db"
            }
        ],
        "name": "Statement",
        "longname": "Statement"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7265,
                7282
            ],
            "filename": "api.js",
            "lineno": 251,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000881",
                "name": "this.stmt",
                "type": "Identifier",
                "value": "stmt1",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Statement#stmt",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7292,
                7304
            ],
            "filename": "api.js",
            "lineno": 252,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000887",
                "name": "this.db",
                "type": "Identifier",
                "value": "db",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "db",
        "longname": "Statement#db",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7362,
                7374
            ],
            "filename": "api.js",
            "lineno": 254,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000893",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7490,
                7512
            ],
            "filename": "api.js",
            "lineno": 257,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000899",
                "name": "this.allocatedmem",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "allocatedmem",
        "longname": "Statement#allocatedmem",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** @typedef {string|number|null|Uint8Array} Database.SqlValue */",
        "meta": {
            "filename": "api.js",
            "lineno": 259,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "SqlValue",
        "type": {
            "names": [
                "string",
                "number",
                "null",
                "Uint8Array"
            ]
        },
        "memberof": "Database",
        "longname": "Database.SqlValue",
        "scope": "static"
    },
    {
        "comment": "/** @typedef {\n        Database.SqlValue[]|Object<string, Database.SqlValue>|null\n    } Statement.BindParams\n     */",
        "meta": {
            "filename": "api.js",
            "lineno": 260,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "BindParams",
        "type": {
            "names": [
                "Array.<Database.SqlValue>",
                "Object.<string, Database.SqlValue>",
                "null"
            ]
        },
        "memberof": "Statement",
        "longname": "Statement.BindParams",
        "scope": "static"
    },
    {
        "comment": "/** Bind values to the parameters, after having reset the statement.\n    * If values is null, do nothing and return true.\n    *\n    * SQL statements can have parameters,\n    * named *'?', '?NNN', ':VVV', '@VVV', '$VVV'*,\n    * where NNN is a number and VVV a string.\n    * This function binds these parameters to the given values.\n    *\n    * *Warning*: ':', '@', and '$' are included in the parameters names\n    *\n    * ## Value types\n    * Javascript type  | SQLite type\n    * -----------------| -----------\n    * number           | REAL, INTEGER\n    * boolean          | INTEGER\n    * string           | TEXT\n    * Array, Uint8Array| BLOB\n    * null             | NULL\n    *\n    * @example <caption>Bind values to named parameters</caption>\n    *     var stmt = db.prepare(\n    *         \"UPDATE test SET a=@newval WHERE id BETWEEN $mini AND $maxi\"\n    *     );\n    *     stmt.bind({$mini:10, $maxi:20, '@newval':5});\n    *\n    * @example <caption>Bind values to anonymous parameters</caption>\n    * // Create a statement that contains parameters like '?', '?NNN'\n    * var stmt = db.prepare(\"UPDATE test SET a=? WHERE id BETWEEN ? AND ?\");\n    * // Call Statement.bind with an array as parameter\n    * stmt.bind([5, 10, 20]);\n    *\n    * @see http://www.sqlite.org/datatype3.html\n    * @see http://www.sqlite.org/lang_expr.html#varparam\n    * @param {Statement.BindParams} values The values to bind\n    * @return {boolean} true if it worked\n    * @throws {String} SQLite Error\n    */",
        "meta": {
            "range": [
                9207,
                9574
            ],
            "filename": "api.js",
            "lineno": 301,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000905",
                "name": "Statement.prototype[\"bind\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bind",
                "paramnames": [
                    "values"
                ]
            }
        },
        "description": "Bind values to the parameters, after having reset the statement.\nIf values is null, do nothing and return true.\n\nSQL statements can have parameters,\nnamed *'?', '?NNN', ':VVV', '@VVV', '$VVV'*,\nwhere NNN is a number and VVV a string.\nThis function binds these parameters to the given values.\n\n*Warning*: ':', '@', and '$' are included in the parameters names\n\n## Value types\nJavascript type  | SQLite type\n-----------------| -----------\nnumber           | REAL, INTEGER\nboolean          | INTEGER\nstring           | TEXT\nArray, Uint8Array| BLOB\nnull             | NULL",
        "examples": [
            "<caption>Bind values to named parameters</caption>\n    var stmt = db.prepare(\n        \"UPDATE test SET a=@newval WHERE id BETWEEN $mini AND $maxi\"\n    );\n    stmt.bind({$mini:10, $maxi:20, '@newval':5});",
            "<caption>Bind values to anonymous parameters</caption>\n// Create a statement that contains parameters like '?', '?NNN'\nvar stmt = db.prepare(\"UPDATE test SET a=? WHERE id BETWEEN ? AND ?\");\n// Call Statement.bind with an array as parameter\nstmt.bind([5, 10, 20]);"
        ],
        "see": [
            "http://www.sqlite.org/datatype3.html",
            "http://www.sqlite.org/lang_expr.html#varparam"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "description": "The values to bind",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "true if it worked"
            }
        ],
        "exceptions": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "SQLite Error"
            }
        ],
        "name": "[\"bind\"]",
        "longname": "Statement#[\"bind\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** Execute the statement, fetching the next line of result,\n    that can be retrieved with {@link Statement.get}.\n    @return {boolean} true if a row of result available\n    @throws {String} SQLite Error\n     */",
        "meta": {
            "range": [
                9797,
                10209
            ],
            "filename": "api.js",
            "lineno": 317,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000959",
                "name": "Statement.prototype[\"step\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "step",
                "paramnames": []
            },
            "vars": {
                "this.pos": "Statement#pos",
                "ret": "Statement#\"step\"~ret"
            }
        },
        "description": "Execute the statement, fetching the next line of result,\n    that can be retrieved with {@link Statement.get}.",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "true if a row of result available"
            }
        ],
        "exceptions": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "SQLite Error"
            }
        ],
        "name": "[\"step\"]",
        "longname": "Statement#[\"step\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9927,
                9939
            ],
            "filename": "api.js",
            "lineno": 321,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000977",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9953,
                9982
            ],
            "filename": "api.js",
            "lineno": 322,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000983",
                "name": "ret",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ret",
        "longname": "Statement#\"step\"~ret",
        "kind": "member",
        "memberof": "Statement#\"step\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10327,
                10536
            ],
            "filename": "api.js",
            "lineno": 336,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001010",
                "name": "Statement.prototype.getNumber",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getNumber",
                "paramnames": [
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos"
            }
        },
        "undocumented": true,
        "name": "getNumber",
        "longname": "Statement#getNumber",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10424,
                10438
            ],
            "filename": "api.js",
            "lineno": 338,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001026",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#getNumber",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10452,
                10465
            ],
            "filename": "api.js",
            "lineno": 339,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001032",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10542,
                10749
            ],
            "filename": "api.js",
            "lineno": 343,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001045",
                "name": "Statement.prototype.getString",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getString",
                "paramnames": [
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos"
            }
        },
        "undocumented": true,
        "name": "getString",
        "longname": "Statement#getString",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10639,
                10653
            ],
            "filename": "api.js",
            "lineno": 345,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001061",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#getString",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10667,
                10680
            ],
            "filename": "api.js",
            "lineno": 346,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001067",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10755,
                11178
            ],
            "filename": "api.js",
            "lineno": 350,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001080",
                "name": "Statement.prototype.getBlob",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getBlob",
                "paramnames": [
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos",
                "size": "Statement#getBlob~size",
                "ptr": "Statement#getBlob~ptr",
                "result": "Statement#getBlob~result",
                "i": "module:SqlJs~i",
                "result[undefined]": "Statement#getBlob~result.undefined]"
            }
        },
        "undocumented": true,
        "name": "getBlob",
        "longname": "Statement#getBlob",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10848,
                10862
            ],
            "filename": "api.js",
            "lineno": 352,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001096",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#getBlob",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10876,
                10889
            ],
            "filename": "api.js",
            "lineno": 353,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001102",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10913,
                10956
            ],
            "filename": "api.js",
            "lineno": 355,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001108",
                "name": "size",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "Statement#getBlob~size",
        "kind": "member",
        "memberof": "Statement#getBlob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10970,
                11011
            ],
            "filename": "api.js",
            "lineno": 356,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001117",
                "name": "ptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ptr",
        "longname": "Statement#getBlob~ptr",
        "kind": "member",
        "memberof": "Statement#getBlob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11025,
                11054
            ],
            "filename": "api.js",
            "lineno": 357,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001126",
                "name": "result",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Statement#getBlob~result",
        "kind": "member",
        "memberof": "Statement#getBlob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11073,
                11078
            ],
            "filename": "api.js",
            "lineno": 358,
            "columnno": 17,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001133",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Statement#getBlob~i",
        "kind": "member",
        "memberof": "Statement#getBlob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11090,
                11096
            ],
            "filename": "api.js",
            "lineno": 358,
            "columnno": 34,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001139",
                "name": "i",
                "type": "Literal",
                "funcscope": "Statement#getBlob",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "module:SqlJs~i",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11112,
                11138
            ],
            "filename": "api.js",
            "lineno": 359,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001144",
                "name": "result[undefined]",
                "type": "MemberExpression",
                "funcscope": "Statement#getBlob",
                "value": "HEAP8[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Statement#getBlob~result.undefined]",
        "kind": "member",
        "memberof": "Statement#getBlob~result",
        "scope": "static"
    },
    {
        "comment": "/** Get one row of results of a statement.\n    If the first parameter is not provided, step must have been called before.\n    @param {Statement.BindParams} [params] If set, the values will be bound\n    to the statement before it is executed\n    @return {Database.SqlValue[]} One row of result\n    @example <caption>Print all the rows of the table test to the console</caption>\n    var stmt = db.prepare(\"SELECT * FROM test\");\n    while (stmt.step()) console.log(stmt.get());\n     */",
        "meta": {
            "range": [
                11671,
                12520
            ],
            "filename": "api.js",
            "lineno": 372,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001156",
                "name": "Statement.prototype[\"get\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "get",
                "paramnames": [
                    "params"
                ]
            },
            "vars": {
                "results1": "Statement#\"get\"~results1",
                "ref": "Statement#\"get\"~ref",
                "field": "module:SqlJs~field"
            }
        },
        "description": "Get one row of results of a statement.\n    If the first parameter is not provided, step must have been called before.",
        "params": [
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "If set, the values will be bound\n    to the statement before it is executed",
                "name": "params"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Database.SqlValue>"
                    ]
                },
                "description": "One row of result"
            }
        ],
        "examples": [
            "<caption>Print all the rows of the table test to the console</caption>\n    var stmt = db.prepare(\"SELECT * FROM test\");\n    while (stmt.step()) console.log(stmt.get());"
        ],
        "name": "[\"get\"]",
        "longname": "Statement#[\"get\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11827,
                11840
            ],
            "filename": "api.js",
            "lineno": 376,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001183",
                "name": "results1",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "results1",
        "longname": "Statement#\"get\"~results1",
        "kind": "member",
        "memberof": "Statement#\"get\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11854,
                11889
            ],
            "filename": "api.js",
            "lineno": 377,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001187",
                "name": "ref",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ref",
        "longname": "Statement#\"get\"~ref",
        "kind": "member",
        "memberof": "Statement#\"get\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11908,
                11917
            ],
            "filename": "api.js",
            "lineno": 378,
            "columnno": 17,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001196",
                "name": "field",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "field",
        "longname": "Statement#\"get\"~field",
        "kind": "member",
        "memberof": "Statement#\"get\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11932,
                11942
            ],
            "filename": "api.js",
            "lineno": 378,
            "columnno": 41,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001202",
                "name": "field",
                "type": "Literal",
                "funcscope": "Statement#[\"get\"]",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "field",
        "longname": "module:SqlJs~field",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Get the list of column names of a row of result of a statement.\n    @return {string[]} The names of the columns\n    @example\n    var stmt = db.prepare(\n        \"SELECT 5 AS nbr, x'616200' AS data, NULL AS null_value;\"\n    );\n    stmt.step(); // Execute the statement\n    console.log(stmt.getColumnNames());\n    // Will print ['nbr','data','null_value']\n     */",
        "meta": {
            "range": [
                12895,
                13186
            ],
            "filename": "api.js",
            "lineno": 406,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001264",
                "name": "Statement.prototype[\"getColumnNames\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getColumnNames",
                "paramnames": []
            },
            "vars": {
                "results1": "Statement#\"getColumnNames\"~results1",
                "ref": "Statement#\"getColumnNames\"~ref",
                "i": "module:SqlJs~i"
            }
        },
        "description": "Get the list of column names of a row of result of a statement.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "The names of the columns"
            }
        ],
        "examples": [
            "var stmt = db.prepare(\n        \"SELECT 5 AS nbr, x'616200' AS data, NULL AS null_value;\"\n    );\n    stmt.step(); // Execute the statement\n    console.log(stmt.getColumnNames());\n    // Will print ['nbr','data','null_value']"
        ],
        "name": "[\"getColumnNames\"]",
        "longname": "Statement#[\"getColumnNames\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12975,
                12988
            ],
            "filename": "api.js",
            "lineno": 407,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001274",
                "name": "results1",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "results1",
        "longname": "Statement#\"getColumnNames\"~results1",
        "kind": "member",
        "memberof": "Statement#\"getColumnNames\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13002,
                13039
            ],
            "filename": "api.js",
            "lineno": 408,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001278",
                "name": "ref",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ref",
        "longname": "Statement#\"getColumnNames\"~ref",
        "kind": "member",
        "memberof": "Statement#\"getColumnNames\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13058,
                13063
            ],
            "filename": "api.js",
            "lineno": 409,
            "columnno": 17,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001287",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Statement#\"getColumnNames\"~i",
        "kind": "member",
        "memberof": "Statement#\"getColumnNames\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13074,
                13080
            ],
            "filename": "api.js",
            "lineno": 409,
            "columnno": 33,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001293",
                "name": "i",
                "type": "Literal",
                "funcscope": "Statement#[\"getColumnNames\"]",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "module:SqlJs~i",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Get one row of result as a javascript object, associating column names\n    with their value in the current row.\n    @param {Statement.BindParams} [params] If set, the values will be bound\n    to the statement, and it will be executed\n    @return {Object<string, Database.SqlValue>} The row of result\n    @see {@link Statement.get}\n    @example\n        var stmt = db.prepare(\n            \"SELECT 5 AS nbr, x'010203' AS data, NULL AS null_value;\"\n        );\n        stmt.step(); // Execute the statement\n        console.log(stmt.getAsObject());\n        // Will print {nbr:5, data: Uint8Array([1,2,3]), null_value:null}\n     */",
        "meta": {
            "range": [
                13825,
                14176
            ],
            "filename": "api.js",
            "lineno": 428,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001311",
                "name": "Statement.prototype[\"getAsObject\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getAsObject",
                "paramnames": [
                    "params"
                ]
            },
            "vars": {
                "values": "Statement#\"getAsObject\"~values",
                "names": "Statement#\"getAsObject\"~names",
                "rowObject": "Statement#\"getAsObject\"~rowObject",
                "i": "module:SqlJs~i",
                "name": "Statement#\"getAsObject\"~name",
                "rowObject[undefined]": "Statement#\"getAsObject\"~rowObject.undefined]"
            }
        },
        "description": "Get one row of result as a javascript object, associating column names\n    with their value in the current row.",
        "params": [
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "If set, the values will be bound\n    to the statement, and it will be executed",
                "name": "params"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object.<string, Database.SqlValue>"
                    ]
                },
                "description": "The row of result"
            }
        ],
        "see": [
            "{@link Statement.get}"
        ],
        "examples": [
            "var stmt = db.prepare(\n            \"SELECT 5 AS nbr, x'010203' AS data, NULL AS null_value;\"\n        );\n        stmt.step(); // Execute the statement\n        console.log(stmt.getAsObject());\n        // Will print {nbr:5, data: Uint8Array([1,2,3]), null_value:null}"
        ],
        "name": "[\"getAsObject\"]",
        "longname": "Statement#[\"getAsObject\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13905,
                13933
            ],
            "filename": "api.js",
            "lineno": 429,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001322",
                "name": "values",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "Statement#\"getAsObject\"~values",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13947,
                13979
            ],
            "filename": "api.js",
            "lineno": 430,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001330",
                "name": "names",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "names",
        "longname": "Statement#\"getAsObject\"~names",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13993,
                14007
            ],
            "filename": "api.js",
            "lineno": 431,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001337",
                "name": "rowObject",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "rowObject",
        "longname": "Statement#\"getAsObject\"~rowObject",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14026,
                14031
            ],
            "filename": "api.js",
            "lineno": 432,
            "columnno": 17,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001342",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Statement#\"getAsObject\"~i",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14051,
                14057
            ],
            "filename": "api.js",
            "lineno": 432,
            "columnno": 42,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001350",
                "name": "i",
                "type": "Literal",
                "funcscope": "Statement#[\"getAsObject\"]",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "module:SqlJs~i",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14077,
                14092
            ],
            "filename": "api.js",
            "lineno": 433,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001355",
                "name": "name",
                "type": "MemberExpression",
                "value": "names[undefined]"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "Statement#\"getAsObject\"~name",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14106,
                14133
            ],
            "filename": "api.js",
            "lineno": 434,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001361",
                "name": "rowObject[undefined]",
                "type": "MemberExpression",
                "funcscope": "Statement#[\"getAsObject\"]",
                "value": "values[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Statement#\"getAsObject\"~rowObject.undefined]",
        "kind": "member",
        "memberof": "Statement#\"getAsObject\"~rowObject",
        "scope": "static"
    },
    {
        "comment": "/** Get the SQL string used in preparing this statement.\n     @return {string} The SQL string\n     */",
        "meta": {
            "range": [
                14288,
                14384
            ],
            "filename": "api.js",
            "lineno": 441,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001371",
                "name": "Statement.prototype[\"getSQL\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getSQL",
                "paramnames": []
            }
        },
        "description": "Get the SQL string used in preparing this statement.",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The SQL string"
            }
        ],
        "name": "[\"getSQL\"]",
        "longname": "Statement#[\"getSQL\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** Get the SQLite's normalized version of the SQL string used in\n    preparing this statement.  The meaning of \"normalized\" is not\n    well-defined: see {@link https://sqlite.org/c3ref/expanded_sql.html\n    the SQLite documentation}.\n     @example\n     db.run(\"create table test (x integer);\");\n     stmt = db.prepare(\"select * from test where x = 42\");\n     // returns \"SELECT*FROM test WHERE x=?;\"\n     @return {string} The normalized SQL string\n     */",
        "meta": {
            "range": [
                14851,
                14978
            ],
            "filename": "api.js",
            "lineno": 454,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001387",
                "name": "Statement.prototype[\"getNormalizedSQL\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getNormalizedSQL",
                "paramnames": []
            }
        },
        "description": "Get the SQLite's normalized version of the SQL string used in\n    preparing this statement.  The meaning of \"normalized\" is not\n    well-defined: see {@link https://sqlite.org/c3ref/expanded_sql.html\n    the SQLite documentation}.",
        "examples": [
            "db.run(\"create table test (x integer);\");\n     stmt = db.prepare(\"select * from test where x = 42\");\n     // returns \"SELECT*FROM test WHERE x=?;\"\n     "
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The normalized SQL string"
            }
        ],
        "name": "[\"getNormalizedSQL\"]",
        "longname": "Statement#[\"getNormalizedSQL\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** Shorthand for bind + step + reset\n    Bind the values, execute the statement, ignoring the rows it returns,\n    and resets it\n    @param {Statement.BindParams} [values] Value to bind to the statement\n     */",
        "meta": {
            "range": [
                15200,
                15387
            ],
            "filename": "api.js",
            "lineno": 462,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001403",
                "name": "Statement.prototype[\"run\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "run",
                "paramnames": [
                    "values"
                ]
            }
        },
        "description": "Shorthand for bind + step + reset\n    Bind the values, execute the statement, ignoring the rows it returns,\n    and resets it",
        "params": [
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "Value to bind to the statement",
                "name": "values"
            }
        ],
        "name": "[\"run\"]",
        "longname": "Statement#[\"run\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15393,
                15882
            ],
            "filename": "api.js",
            "lineno": 469,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001435",
                "name": "Statement.prototype.bindString",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindString",
                "paramnames": [
                    "string",
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos",
                "bytes": "Statement#bindString~bytes",
                "strptr": "Statement#bindString~strptr"
            }
        },
        "undocumented": true,
        "name": "bindString",
        "longname": "Statement#bindString",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15500,
                15514
            ],
            "filename": "api.js",
            "lineno": 471,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001452",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#bindString",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15528,
                15541
            ],
            "filename": "api.js",
            "lineno": 472,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001458",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15565,
                15599
            ],
            "filename": "api.js",
            "lineno": 474,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001464",
                "name": "bytes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bytes",
        "longname": "Statement#bindString~bytes",
        "kind": "member",
        "memberof": "Statement#bindString",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15613,
                15651
            ],
            "filename": "api.js",
            "lineno": 475,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001470",
                "name": "strptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strptr",
        "longname": "Statement#bindString~strptr",
        "kind": "member",
        "memberof": "Statement#bindString",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15888,
                16323
            ],
            "filename": "api.js",
            "lineno": 486,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001507",
                "name": "Statement.prototype.bindBlob",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindBlob",
                "paramnames": [
                    "array",
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos",
                "blobptr": "Statement#bindBlob~blobptr"
            }
        },
        "undocumented": true,
        "name": "bindBlob",
        "longname": "Statement#bindBlob",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15990,
                16004
            ],
            "filename": "api.js",
            "lineno": 488,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001524",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#bindBlob",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16018,
                16031
            ],
            "filename": "api.js",
            "lineno": 489,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001530",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16055,
                16094
            ],
            "filename": "api.js",
            "lineno": 491,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001536",
                "name": "blobptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "blobptr",
        "longname": "Statement#bindBlob~blobptr",
        "kind": "member",
        "memberof": "Statement#bindBlob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16329,
                16711
            ],
            "filename": "api.js",
            "lineno": 502,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001571",
                "name": "Statement.prototype.bindNumber",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindNumber",
                "paramnames": [
                    "num",
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos",
                "bindfunc": "Statement#bindNumber~bindfunc"
            }
        },
        "undocumented": true,
        "name": "bindNumber",
        "longname": "Statement#bindNumber",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16433,
                16447
            ],
            "filename": "api.js",
            "lineno": 504,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001588",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#bindNumber",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16461,
                16474
            ],
            "filename": "api.js",
            "lineno": 505,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001594",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16498,
                16623
            ],
            "filename": "api.js",
            "lineno": 507,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001600",
                "name": "bindfunc",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bindfunc",
        "longname": "Statement#bindNumber~bindfunc",
        "kind": "member",
        "memberof": "Statement#bindNumber",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16717,
                16943
            ],
            "filename": "api.js",
            "lineno": 515,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001627",
                "name": "Statement.prototype.bindNull",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindNull",
                "paramnames": [
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos"
            }
        },
        "undocumented": true,
        "name": "bindNull",
        "longname": "Statement#bindNull",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16812,
                16826
            ],
            "filename": "api.js",
            "lineno": 517,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001643",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#bindNull",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16840,
                16853
            ],
            "filename": "api.js",
            "lineno": 518,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001649",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16949,
                17767
            ],
            "filename": "api.js",
            "lineno": 522,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001667",
                "name": "Statement.prototype.bindValue",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindValue",
                "paramnames": [
                    "val",
                    "pos"
                ]
            },
            "vars": {
                "pos": "module:SqlJs~pos",
                "this.pos": "Statement#pos"
            }
        },
        "undocumented": true,
        "name": "bindValue",
        "longname": "Statement#bindValue",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17051,
                17065
            ],
            "filename": "api.js",
            "lineno": 524,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001684",
                "name": "pos",
                "type": "MemberExpression",
                "funcscope": "Statement#bindValue",
                "value": "this.pos",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "module:SqlJs~pos",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17079,
                17092
            ],
            "filename": "api.js",
            "lineno": 525,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001690",
                "name": "this.pos",
                "type": "Literal",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pos",
        "longname": "Statement#pos",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** Bind names and values of an object to the named parameters of the\n    statement\n    @param {Object<string, Database.SqlValue>} valuesObj\n    @private\n    @nodoc\n     */",
        "meta": {
            "range": [
                17950,
                18314
            ],
            "filename": "api.js",
            "lineno": 555,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001757",
                "name": "Statement.prototype.bindFromObject",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindFromObject",
                "paramnames": [
                    "valuesObj"
                ]
            },
            "vars": {
                "that": "Statement#bindFromObject~that",
                "": null
            }
        },
        "description": "Bind names and values of an object to the named parameters of the\n    statement",
        "params": [
            {
                "type": {
                    "names": [
                        "Object.<string, Database.SqlValue>"
                    ]
                },
                "name": "valuesObj"
            }
        ],
        "access": "private",
        "tags": [
            {
                "originalTitle": "nodoc",
                "title": "nodoc",
                "text": ""
            }
        ],
        "name": "bindFromObject",
        "longname": "Statement#bindFromObject",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18036,
                18047
            ],
            "filename": "api.js",
            "lineno": 556,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001768",
                "name": "that",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "that",
        "longname": "Statement#bindFromObject~that",
        "kind": "member",
        "memberof": "Statement#bindFromObject",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18126,
                18177
            ],
            "filename": "api.js",
            "lineno": 558,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001785",
                "name": "num",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "num",
        "longname": "<anonymous>~num",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/** Bind values to numbered parameters\n    @param {Database.SqlValue[]} values\n    @private\n    @nodoc\n     */",
        "meta": {
            "range": [
                18435,
                18649
            ],
            "filename": "api.js",
            "lineno": 570,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001810",
                "name": "Statement.prototype.bindFromArray",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "bindFromArray",
                "paramnames": [
                    "values"
                ]
            },
            "vars": {
                "num": "module:SqlJs~num"
            }
        },
        "description": "Bind values to numbered parameters",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Database.SqlValue>"
                    ]
                },
                "name": "values"
            }
        ],
        "access": "private",
        "tags": [
            {
                "originalTitle": "nodoc",
                "title": "nodoc",
                "text": ""
            }
        ],
        "name": "bindFromArray",
        "longname": "Statement#bindFromArray",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18521,
                18528
            ],
            "filename": "api.js",
            "lineno": 571,
            "columnno": 17,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001822",
                "name": "num",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "num",
        "longname": "Statement#bindFromArray~num",
        "kind": "member",
        "memberof": "Statement#bindFromArray",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18551,
                18559
            ],
            "filename": "api.js",
            "lineno": 571,
            "columnno": 47,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001830",
                "name": "num",
                "type": "Literal",
                "funcscope": "Statement#bindFromArray",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "num",
        "longname": "module:SqlJs~num",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Reset a statement, so that it's parameters can be bound to new values\n    It also clears all previous bindings, freeing the memory used\n    by bound parameters.\n     */",
        "meta": {
            "range": [
                18832,
                19053
            ],
            "filename": "api.js",
            "lineno": 580,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001848",
                "name": "Statement.prototype[\"reset\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "reset",
                "paramnames": []
            }
        },
        "description": "Reset a statement, so that it's parameters can be bound to new values\n    It also clears all previous bindings, freeing the memory used\n    by bound parameters.",
        "name": "[\"reset\"]",
        "longname": "Statement#[\"reset\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/** Free the memory allocated during parameter binding */",
        "meta": {
            "range": [
                19121,
                19295
            ],
            "filename": "api.js",
            "lineno": 588,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001879",
                "name": "Statement.prototype[\"freemem\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "freemem",
                "paramnames": []
            },
            "vars": {
                "mem": "module:SqlJs~mem"
            }
        },
        "description": "Free the memory allocated during parameter binding",
        "name": "[\"freemem\"]",
        "longname": "Statement#[\"freemem\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19187,
                19190
            ],
            "filename": "api.js",
            "lineno": 589,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001889",
                "name": "mem"
            }
        },
        "undocumented": true,
        "name": "mem",
        "longname": "Statement#\"freemem\"~mem",
        "kind": "member",
        "memberof": "Statement#\"freemem\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19208,
                19237
            ],
            "filename": "api.js",
            "lineno": 590,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001893",
                "name": "mem",
                "type": "CallExpression",
                "funcscope": "Statement#[\"freemem\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mem",
        "longname": "module:SqlJs~mem",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Free the memory used by the statement\n    @return {boolean} true in case of success\n     */",
        "meta": {
            "range": [
                19401,
                19644
            ],
            "filename": "api.js",
            "lineno": 597,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001908",
                "name": "Statement.prototype[\"free\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "free",
                "paramnames": []
            },
            "vars": {
                "res": "module:SqlJs~res",
                "this.stmt": "Statement#stmt"
            }
        },
        "description": "Free the memory used by the statement",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "true in case of success"
            }
        ],
        "name": "[\"free\"]",
        "longname": "Statement#[\"free\"]",
        "kind": "function",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19461,
                19464
            ],
            "filename": "api.js",
            "lineno": 598,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001918",
                "name": "res"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "Statement#\"free\"~res",
        "kind": "member",
        "memberof": "Statement#\"free\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19498,
                19545
            ],
            "filename": "api.js",
            "lineno": 600,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001926",
                "name": "res",
                "type": "BinaryExpression",
                "funcscope": "Statement#[\"free\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "module:SqlJs~res",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19601,
                19617
            ],
            "filename": "api.js",
            "lineno": 602,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001947",
                "name": "this.stmt",
                "type": "Identifier",
                "value": "NULL",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Statement#stmt",
        "kind": "member",
        "memberof": "Statement",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @classdesc\n     * An iterator over multiple SQL statements in a string,\n     * preparing and returning a Statement object for the next SQL\n     * statement on each iteration.\n     *\n     * You can't instantiate this class directly, you have to use a\n     * {@link Database} object in order to create a statement iterator\n     *\n     * {@see Database#iterateStatements}\n     *\n     * @example\n     * // loop over and execute statements in string sql\n     * for (let statement of db.iterateStatements(sql)) {\n     *     statement.step();\n     *     // get results, etc.\n     *     // do not call statement.free() manually, each statement is freed\n     *     // before the next one is parsed\n     * }\n     *\n     * // capture any bad query exceptions with feedback\n     * // on the bad sql\n     * let it = db.iterateStatements(sql);\n     * try {\n     *     for (let statement of it) {\n     *         statement.step();\n     *     }\n     * } catch(e) {\n     *     console.log(\n     *         `The SQL string \"${it.getRemainingSQL()}\" ` +\n     *         `contains the following error: ${e}`\n     *     );\n     * }\n     *\n     * @implements {Iterator<Statement>}\n     * @implements {Iterable<Statement>}\n     * @constructs StatementIterator\n     * @memberof module:SqlJs\n     * @param {string} sql A string containing multiple SQL statements\n     * @param {Database} db The database from which this iterator was created\n     */",
        "meta": {
            "range": [
                21086,
                21507
            ],
            "filename": "api.js",
            "lineno": 646,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001954",
                "name": "StatementIterator",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "sql",
                    "db"
                ]
            },
            "vars": {
                "this.db": "StatementIterator#db",
                "sz": "StatementIterator~sz",
                "this.sqlPtr": "StatementIterator#sqlPtr",
                "this.nextSqlPtr": "StatementIterator#nextSqlPtr",
                "this.nextSqlString": "StatementIterator#nextSqlString",
                "this.activeStatement": "StatementIterator#activeStatement"
            }
        },
        "classdesc": "An iterator over multiple SQL statements in a string,\npreparing and returning a Statement object for the next SQL\nstatement on each iteration.\n\nYou can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement iterator\n\n{@see Database#iterateStatements}",
        "examples": [
            "// loop over and execute statements in string sql\nfor (let statement of db.iterateStatements(sql)) {\n    statement.step();\n    // get results, etc.\n    // do not call statement.free() manually, each statement is freed\n    // before the next one is parsed\n}\n\n// capture any bad query exceptions with feedback\n// on the bad sql\nlet it = db.iterateStatements(sql);\ntry {\n    for (let statement of it) {\n        statement.step();\n    }\n} catch(e) {\n    console.log(\n        `The SQL string \"${it.getRemainingSQL()}\" ` +\n        `contains the following error: ${e}`\n    );\n}"
        ],
        "implements": [
            "Iterator<Statement>",
            "Iterable<Statement>"
        ],
        "alias": "StatementIterator",
        "kind": "class",
        "memberof": "module:SqlJs",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A string containing multiple SQL statements",
                "name": "sql"
            },
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "The database from which this iterator was created",
                "name": "db"
            }
        ],
        "name": "StatementIterator",
        "longname": "StatementIterator"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21132,
                21144
            ],
            "filename": "api.js",
            "lineno": 647,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001960",
                "name": "this.db",
                "type": "Identifier",
                "value": "db",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "db",
        "longname": "StatementIterator#db",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21158,
                21187
            ],
            "filename": "api.js",
            "lineno": 648,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001966",
                "name": "sz",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sz",
        "longname": "StatementIterator~sz",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21197,
                21222
            ],
            "filename": "api.js",
            "lineno": 649,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100001974",
                "name": "this.sqlPtr",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sqlPtr",
        "longname": "StatementIterator#sqlPtr",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21399,
                21428
            ],
            "filename": "api.js",
            "lineno": 654,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002001",
                "name": "this.nextSqlPtr",
                "type": "MemberExpression",
                "value": "this.sqlPtr",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextSqlPtr",
        "longname": "StatementIterator#nextSqlPtr",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21438,
                21463
            ],
            "filename": "api.js",
            "lineno": 655,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002009",
                "name": "this.nextSqlString",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextSqlString",
        "longname": "StatementIterator#nextSqlString",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21473,
                21500
            ],
            "filename": "api.js",
            "lineno": 656,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002015",
                "name": "this.activeStatement",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "activeStatement",
        "longname": "StatementIterator#activeStatement",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "/**\n     * @typedef {{ done:true, value:undefined } |\n     *           { done:false, value:Statement}}\n     *           StatementIterator.StatementIteratorResult\n     * @property {Statement} value the next available Statement\n     * (as returned by {@link Database.prepare})\n     * @property {boolean} done true if there are no more available statements\n     */",
        "meta": {
            "filename": "api.js",
            "lineno": 658,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "StatementIteratorResult",
        "type": {
            "names": [
                "Object",
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "Statement"
                    ]
                },
                "description": "the next available Statement\n(as returned by {@link Database.prepare})",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "true if there are no more available statements",
                "name": "done"
            }
        ],
        "memberof": "StatementIterator",
        "longname": "StatementIterator.StatementIteratorResult",
        "scope": "static"
    },
    {
        "comment": "/** Prepare the next available SQL statement\n     @return {StatementIterator.StatementIteratorResult}\n     @throws {String} SQLite error or invalid iterator error\n     */",
        "meta": {
            "range": [
                22053,
                23426
            ],
            "filename": "api.js",
            "lineno": 670,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002021",
                "name": "StatementIterator.prototype[\"next\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "next",
                "paramnames": []
            },
            "vars": {
                "this.activeStatement": "StatementIterator#activeStatement",
                "stack": "StatementIterator#\"next\"~stack",
                "pzTail": "StatementIterator#\"next\"~pzTail",
                "this.nextSqlPtr": "StatementIterator#nextSqlPtr",
                "pStmt": "StatementIterator#\"next\"~pStmt",
                "this.db.statements[undefined]": "StatementIterator#db.statements[undefined]",
                "this.nextSqlString": "StatementIterator#nextSqlString"
            }
        },
        "description": "Prepare the next available SQL statement",
        "returns": [
            {
                "type": {
                    "names": [
                        "StatementIterator.StatementIteratorResult"
                    ]
                }
            }
        ],
        "exceptions": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "SQLite error or invalid iterator error"
            }
        ],
        "name": "[\"next\"]",
        "longname": "StatementIterator#[\"next\"]",
        "kind": "function",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22166,
                22176
            ],
            "filename": "api.js",
            "lineno": 672,
            "columnno": 21,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002039",
                "name": "done",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "module:SqlJs~done",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22291,
                22318
            ],
            "filename": "api.js",
            "lineno": 676,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002056",
                "name": "this.activeStatement",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "activeStatement",
        "longname": "StatementIterator#activeStatement",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22456,
                22475
            ],
            "filename": "api.js",
            "lineno": 682,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002079",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "StatementIterator#\"next\"~stack",
        "kind": "member",
        "memberof": "StatementIterator#\"next\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22489,
                22511
            ],
            "filename": "api.js",
            "lineno": 683,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002084",
                "name": "pzTail",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pzTail",
        "longname": "StatementIterator#\"next\"~pzTail",
        "kind": "member",
        "memberof": "StatementIterator#\"next\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22816,
                22857
            ],
            "filename": "api.js",
            "lineno": 694,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002125",
                "name": "this.nextSqlPtr",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextSqlPtr",
        "longname": "StatementIterator#nextSqlPtr",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22875,
                22907
            ],
            "filename": "api.js",
            "lineno": 695,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002134",
                "name": "pStmt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pStmt",
        "longname": "StatementIterator#\"next\"~pStmt",
        "kind": "member",
        "memberof": "StatementIterator#\"next\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23001,
                23011
            ],
            "filename": "api.js",
            "lineno": 698,
            "columnno": 25,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002152",
                "name": "done",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "module:SqlJs~done",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23041,
                23093
            ],
            "filename": "api.js",
            "lineno": 700,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002155",
                "name": "this.activeStatement",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "activeStatement",
        "longname": "StatementIterator#activeStatement",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23107,
                23155
            ],
            "filename": "api.js",
            "lineno": 701,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002166",
                "name": "this.db.statements[undefined]",
                "type": "MemberExpression",
                "value": "this.activeStatement",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statements[undefined]",
        "longname": "StatementIterator#db.statements[undefined]",
        "kind": "member",
        "memberof": "StatementIterator#db",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23178,
                23205
            ],
            "filename": "api.js",
            "lineno": 702,
            "columnno": 21,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002179",
                "name": "value",
                "type": "MemberExpression",
                "value": "this.activeStatement"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "module:SqlJs~value",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23207,
                23218
            ],
            "filename": "api.js",
            "lineno": 702,
            "columnno": 50,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002183",
                "name": "done",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "module:SqlJs~done",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23256,
                23306
            ],
            "filename": "api.js",
            "lineno": 704,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002187",
                "name": "this.nextSqlString",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextSqlString",
        "longname": "StatementIterator#nextSqlString",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23432,
                23554
            ],
            "filename": "api.js",
            "lineno": 711,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002209",
                "name": "StatementIterator.prototype.finalize",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "finalize",
                "paramnames": []
            },
            "vars": {
                "this.sqlPtr": "StatementIterator#sqlPtr"
            }
        },
        "undocumented": true,
        "name": "finalize",
        "longname": "StatementIterator#finalize",
        "kind": "function",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23529,
                23547
            ],
            "filename": "api.js",
            "lineno": 713,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002225",
                "name": "this.sqlPtr",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sqlPtr",
        "longname": "StatementIterator#sqlPtr",
        "kind": "member",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "/** Get any un-executed portions remaining of the original SQL string\n     @return {String}\n     */",
        "meta": {
            "range": [
                23664,
                23967
            ],
            "filename": "api.js",
            "lineno": 718,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002231",
                "name": "StatementIterator.prototype[\"getRemainingSQL\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getRemainder",
                "paramnames": []
            }
        },
        "description": "Get any un-executed portions remaining of the original SQL string",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "name": "[\"getRemainingSQL\"]",
        "longname": "StatementIterator#[\"getRemainingSQL\"]",
        "kind": "function",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24095,
                24198
            ],
            "filename": "api.js",
            "lineno": 726,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002270",
                "name": "StatementIterator.prototype[undefined]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "iterator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "StatementIterator#[undefined]",
        "kind": "function",
        "memberof": "StatementIterator",
        "scope": "instance"
    },
    {
        "comment": "/** @classdesc\n    * Represents an SQLite database\n    * @constructs Database\n    * @memberof module:SqlJs\n    * Open a new database either by creating a new one or opening an existing\n    * one stored in the byte array passed in first argument\n    * @param {number[]} data An array of bytes representing\n    * an SQLite database file\n    */",
        "meta": {
            "range": [
                24556,
                25139
            ],
            "filename": "api.js",
            "lineno": 739,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002283",
                "name": "Database",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "data"
                ]
            },
            "vars": {
                "this.filename": "Database#filename",
                "this.db": "Database#db",
                "this.statements": "Database#statements",
                "this.functions": "Database#functions"
            }
        },
        "classdesc": "Represents an SQLite database",
        "alias": "Database",
        "kind": "class",
        "memberof": "module:SqlJs\nOpen a new database either by creating a new one or opening an existing\none stored in the byte array passed in first argument",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<number>"
                    ]
                },
                "description": "An array of bytes representing\nan SQLite database file",
                "name": "data"
            }
        ],
        "name": "Database",
        "longname": "Database"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24590,
                24652
            ],
            "filename": "api.js",
            "lineno": 740,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002288",
                "name": "this.filename",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "filename",
        "longname": "Database#filename",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24833,
                24867
            ],
            "filename": "api.js",
            "lineno": 745,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002331",
                "name": "this.db",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "db",
        "longname": "Database#db",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24983,
                25003
            ],
            "filename": "api.js",
            "lineno": 748,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002346",
                "name": "this.statements",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statements",
        "longname": "Database#statements",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25113,
                25132
            ],
            "filename": "api.js",
            "lineno": 751,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002352",
                "name": "this.functions",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functions",
        "longname": "Database#functions",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Execute an SQL query, ignoring the rows it returns.\n    @param {string} sql a string containing some SQL text to execute\n    @param {Statement.BindParams} [params] When the SQL statement contains\n    placeholders, you can pass them in here. They will be bound to the statement\n    before it is executed. If you use the params argument, you **cannot**\n    provide an sql string that contains several statements (separated by `;`)\n    @example\n    // Insert values in a table\n    db.run(\n        \"INSERT INTO test VALUES (:age, :name)\",\n        { ':age' : 18, ':name' : 'John' }\n    );\n    @return {Database} The database object (useful for method chaining)\n     */",
        "meta": {
            "range": [
                25816,
                26264
            ],
            "filename": "api.js",
            "lineno": 767,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002358",
                "name": "Database.prototype[\"run\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "run",
                "paramnames": [
                    "sql",
                    "params"
                ]
            },
            "vars": {
                "stmt": "Database#\"run\"~stmt"
            }
        },
        "description": "Execute an SQL query, ignoring the rows it returns.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "a string containing some SQL text to execute",
                "name": "sql"
            },
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "When the SQL statement contains\n    placeholders, you can pass them in here. They will be bound to the statement\n    before it is executed. If you use the params argument, you **cannot**\n    provide an sql string that contains several statements (separated by `;`)",
                "name": "params"
            }
        ],
        "examples": [
            "// Insert values in a table\n    db.run(\n        \"INSERT INTO test VALUES (:age, :name)\",\n        { ':age' : 18, ':name' : 'John' }\n    );\n    "
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "The database object (useful for method chaining)"
            }
        ],
        "name": "[\"run\"]",
        "longname": "Database#[\"run\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25981,
                26016
            ],
            "filename": "api.js",
            "lineno": 772,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002381",
                "name": "stmt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Database#\"run\"~stmt",
        "kind": "member",
        "memberof": "Database#\"run\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n     * @typedef {{\n        columns:string[],\n        values:Database.SqlValue[][]\n    }} Database.QueryExecResult\n     * @property {string[]} columns the name of the columns of the result\n     * (as returned by {@link Statement.getColumnNames})\n     * @property {Database.SqlValue[][]} values one array per row, containing\n     * the column values\n     */",
        "meta": {
            "filename": "api.js",
            "lineno": 783,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {}
        },
        "kind": "typedef",
        "name": "QueryExecResult",
        "type": {
            "names": [
                "Object"
            ]
        },
        "properties": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "the name of the columns of the result\n(as returned by {@link Statement.getColumnNames})",
                "name": "columns"
            },
            {
                "type": {
                    "names": [
                        "Array.<Array.<Database.SqlValue>>"
                    ]
                },
                "description": "one array per row, containing\nthe column values",
                "name": "values"
            }
        ],
        "memberof": "Database",
        "longname": "Database.QueryExecResult",
        "scope": "static"
    },
    {
        "comment": "/** Execute an SQL query, and returns the result.\n    *\n    * This is a wrapper against\n    * {@link Database.prepare},\n    * {@link Statement.bind},\n    * {@link Statement.step},\n    * {@link Statement.get},\n    * and {@link Statement.free}.\n    *\n    * The result is an array of result elements. There are as many result\n    * elements as the number of statements in your sql string (statements are\n    * separated by a semicolon)\n    *\n    * ## Example use\n    * We will create the following table, named *test* and query it with a\n    * multi-line statement using params:\n    *\n    * | id | age |  name  |\n    * |:--:|:---:|:------:|\n    * | 1  |  1  | Ling   |\n    * | 2  |  18 | Paul   |\n    *\n    * We query it like that:\n    * ```javascript\n    * var db = new SQL.Database();\n    * var res = db.exec(\n    *     \"DROP TABLE IF EXISTS test;\\n\"\n    *     + \"CREATE TABLE test (id INTEGER, age INTEGER, name TEXT);\"\n    *     + \"INSERT INTO test VALUES ($id1, :age1, @name1);\"\n    *     + \"INSERT INTO test VALUES ($id2, :age2, @name2);\"\n    *     + \"SELECT id FROM test;\"\n    *     + \"SELECT age,name FROM test WHERE id=$id1\",\n    *     {\n    *         \"$id1\": 1, \":age1\": 1, \"@name1\": \"Ling\",\n    *         \"$id2\": 2, \":age2\": 18, \"@name2\": \"Paul\"\n    *     }\n    * );\n    * ```\n    *\n    * `res` is now :\n    * ```javascript\n    *     [\n    *         {\"columns\":[\"id\"],\"values\":[[1],[2]]},\n    *         {\"columns\":[\"age\",\"name\"],\"values\":[[1,\"Ling\"]]}\n    *     ]\n    * ```\n    *\n    @param {string} sql a string containing some SQL text to execute\n    @param {Statement.BindParams} [params] When the SQL statement contains\n    placeholders, you can pass them in here. They will be bound to the statement\n    before it is executed. If you use the params argument as an array,\n    you **cannot** provide an sql string that contains several statements\n    (separated by `;`). This limitation does not apply to params as an object.\n    * @return {Database.QueryExecResult[]} The results of each statement\n    */",
        "meta": {
            "range": [
                28655,
                30491
            ],
            "filename": "api.js",
            "lineno": 848,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002420",
                "name": "Database.prototype[\"exec\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "exec",
                "paramnames": [
                    "sql",
                    "params"
                ]
            },
            "vars": {
                "stack": "Database#\"exec\"~stack",
                "stmt": "module:SqlJs~stmt",
                "nextSqlPtr": "module:SqlJs~nextSqlPtr",
                "pzTail": "Database#\"exec\"~pzTail",
                "results": "Database#\"exec\"~results",
                "pStmt": "Database#\"exec\"~pStmt",
                "curresult": "module:SqlJs~curresult"
            }
        },
        "description": "Execute an SQL query, and returns the result.\n\nThis is a wrapper against\n{@link Database.prepare},\n{@link Statement.bind},\n{@link Statement.step},\n{@link Statement.get},\nand {@link Statement.free}.\n\nThe result is an array of result elements. There are as many result\nelements as the number of statements in your sql string (statements are\nseparated by a semicolon)\n\n## Example use\nWe will create the following table, named *test* and query it with a\nmulti-line statement using params:\n\n| id | age |  name  |\n|:--:|:---:|:------:|\n| 1  |  1  | Ling   |\n| 2  |  18 | Paul   |\n\nWe query it like that:\n```javascript\nvar db = new SQL.Database();\nvar res = db.exec(\n    \"DROP TABLE IF EXISTS test;\\n\"\n    + \"CREATE TABLE test (id INTEGER, age INTEGER, name TEXT);\"\n    + \"INSERT INTO test VALUES ($id1, :age1, @name1);\"\n    + \"INSERT INTO test VALUES ($id2, :age2, @name2);\"\n    + \"SELECT id FROM test;\"\n    + \"SELECT age,name FROM test WHERE id=$id1\",\n    {\n        \"$id1\": 1, \":age1\": 1, \"@name1\": \"Ling\",\n        \"$id2\": 2, \":age2\": 18, \"@name2\": \"Paul\"\n    }\n);\n```\n\n`res` is now :\n```javascript\n    [\n        {\"columns\":[\"id\"],\"values\":[[1],[2]]},\n        {\"columns\":[\"age\",\"name\"],\"values\":[[1,\"Ling\"]]}\n    ]\n```",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "a string containing some SQL text to execute",
                "name": "sql"
            },
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "When the SQL statement contains\n    placeholders, you can pass them in here. They will be bound to the statement\n    before it is executed. If you use the params argument as an array,\n    you **cannot** provide an sql string that contains several statements\n    (separated by `;`). This limitation does not apply to params as an object.",
                "name": "params"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Database.QueryExecResult>"
                    ]
                },
                "description": "The results of each statement"
            }
        ],
        "name": "[\"exec\"]",
        "longname": "Database#[\"exec\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28796,
                28815
            ],
            "filename": "api.js",
            "lineno": 852,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002440",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "Database#\"exec\"~stack",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28829,
                28840
            ],
            "filename": "api.js",
            "lineno": 853,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002445",
                "name": "stmt",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Database#\"exec\"~stmt",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28872,
                28909
            ],
            "filename": "api.js",
            "lineno": 855,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002451",
                "name": "nextSqlPtr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nextSqlPtr",
        "longname": "Database#\"exec\"~nextSqlPtr",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28927,
                28949
            ],
            "filename": "api.js",
            "lineno": 856,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002457",
                "name": "pzTail",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pzTail",
        "longname": "Database#\"exec\"~pzTail",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28967,
                28979
            ],
            "filename": "api.js",
            "lineno": 857,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002463",
                "name": "results",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "results",
        "longname": "Database#\"exec\"~results",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29420,
                29452
            ],
            "filename": "api.js",
            "lineno": 869,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002502",
                "name": "pStmt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pStmt",
        "longname": "Database#\"exec\"~pStmt",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29470,
                29506
            ],
            "filename": "api.js",
            "lineno": 870,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002509",
                "name": "nextSqlPtr",
                "type": "CallExpression",
                "funcscope": "Database#[\"exec\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextSqlPtr",
        "longname": "module:SqlJs~nextSqlPtr",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29605,
                29621
            ],
            "filename": "api.js",
            "lineno": 873,
            "columnno": 24,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002521",
                "name": "curresult",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "curresult",
        "longname": "Database#\"exec\"~curresult",
        "kind": "member",
        "memberof": "Database#\"exec\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29643,
                29676
            ],
            "filename": "api.js",
            "lineno": 874,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002525",
                "name": "stmt",
                "type": "NewExpression",
                "funcscope": "Database#[\"exec\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "module:SqlJs~stmt",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29908,
                30062
            ],
            "filename": "api.js",
            "lineno": 880,
            "columnno": 28,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002554",
                "name": "curresult",
                "type": "ObjectExpression",
                "funcscope": "Database#[\"exec\"]",
                "value": "{\"columns\":\"\",\"values\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "curresult",
        "longname": "module:SqlJs~curresult",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29954,
                29987
            ],
            "filename": "api.js",
            "lineno": 881,
            "columnno": 32,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002557",
                "name": "columns",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "columns",
        "longname": "module:SqlJs~curresult.columns",
        "kind": "member",
        "memberof": "module:SqlJs~curresult",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30021,
                30031
            ],
            "filename": "api.js",
            "lineno": 882,
            "columnno": 32,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002562",
                "name": "values",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "module:SqlJs~curresult.values",
        "kind": "member",
        "memberof": "module:SqlJs~curresult",
        "scope": "static"
    },
    {
        "comment": "/** Execute a sql statement, and call a callback for each row of result.\n    Currently, this method is synchronous, it will not return until the callback\n    has been called on every row of the result. But this might change.\n    @param {string} sql A string of SQL text. Can contain placeholders\n    that will be bound to the parameters given as the second argument\n    @param {Statement.BindParams} [params=[]] Parameters to bind to the query\n    @param {function(Object<string, Database.SqlValue>):void} callback\n    Function to call on each row of result\n    @param {function():void} done A function that will be called when\n    all rows have been retrieved\n    @return {Database} The database object. Useful for method chaining\n    @example <caption>Read values from a table</caption>\n    db.each(\"SELECT name,age FROM users WHERE age >= $majority\", {$majority:18},\n            function (row){console.log(row.name + \" is a grown-up.\")}\n    );\n     */",
        "meta": {
            "range": [
                31456,
                32021
            ],
            "filename": "api.js",
            "lineno": 915,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002604",
                "name": "Database.prototype[\"each\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "each",
                "paramnames": [
                    "sql",
                    "params",
                    "callback",
                    "done"
                ]
            },
            "vars": {
                "stmt": "module:SqlJs~stmt",
                "done": "module:SqlJs~done",
                "callback": "module:SqlJs~callback",
                "params": "module:SqlJs~params"
            }
        },
        "description": "Execute a sql statement, and call a callback for each row of result.\n    Currently, this method is synchronous, it will not return until the callback\n    has been called on every row of the result. But this might change.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A string of SQL text. Can contain placeholders\n    that will be bound to the parameters given as the second argument",
                "name": "sql"
            },
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "Parameters to bind to the query",
                "name": "params"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Function to call on each row of result",
                "name": "callback"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "A function that will be called when\n    all rows have been retrieved",
                "name": "done"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "The database object. Useful for method chaining"
            }
        ],
        "examples": [
            "<caption>Read values from a table</caption>\n    db.each(\"SELECT name,age FROM users WHERE age >= $majority\", {$majority:18},\n            function (row){console.log(row.name + \" is a grown-up.\")}\n    );"
        ],
        "name": "[\"each\"]",
        "longname": "Database#[\"each\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31542,
                31546
            ],
            "filename": "api.js",
            "lineno": 916,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002618",
                "name": "stmt"
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Database#\"each\"~stmt",
        "kind": "member",
        "memberof": "Database#\"each\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31604,
                31619
            ],
            "filename": "api.js",
            "lineno": 918,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002627",
                "name": "done",
                "type": "Identifier",
                "funcscope": "Database#[\"each\"]",
                "value": "callback",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "module:SqlJs~done",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31633,
                31650
            ],
            "filename": "api.js",
            "lineno": 919,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002631",
                "name": "callback",
                "type": "Identifier",
                "funcscope": "Database#[\"each\"]",
                "value": "params",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "callback",
        "longname": "module:SqlJs~callback",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31664,
                31682
            ],
            "filename": "api.js",
            "lineno": 920,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002635",
                "name": "params",
                "type": "Identifier",
                "funcscope": "Database#[\"each\"]",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "params",
        "longname": "module:SqlJs~params",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31702,
                31737
            ],
            "filename": "api.js",
            "lineno": 922,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002639",
                "name": "stmt",
                "type": "CallExpression",
                "funcscope": "Database#[\"each\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "module:SqlJs~stmt",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Prepare an SQL statement\n    @param {string} sql a string of SQL, that can contain placeholders\n    (`?`, `:VVV`, `:AAA`, `@AAA`)\n    @param {Statement.BindParams} [params] values to bind to placeholders\n    @return {Statement} the resulting statement\n    @throws {String} SQLite error\n     */",
        "meta": {
            "range": [
                32329,
                32861
            ],
            "filename": "api.js",
            "lineno": 942,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002680",
                "name": "Database.prototype[\"prepare\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "prepare",
                "paramnames": [
                    "sql",
                    "params"
                ]
            },
            "vars": {
                "pStmt": "Database#\"prepare\"~pStmt",
                "stmt": "Database#\"prepare\"~stmt",
                "this.statements[undefined]": "Database#statements[undefined]"
            }
        },
        "description": "Prepare an SQL statement",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "a string of SQL, that can contain placeholders\n    (`?`, `:VVV`, `:AAA`, `@AAA`)",
                "name": "sql"
            },
            {
                "type": {
                    "names": [
                        "Statement.BindParams"
                    ]
                },
                "optional": true,
                "description": "values to bind to placeholders",
                "name": "params"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Statement"
                    ]
                },
                "description": "the resulting statement"
            }
        ],
        "exceptions": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "SQLite error"
            }
        ],
        "name": "[\"prepare\"]",
        "longname": "Database#[\"prepare\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32564,
                32596
            ],
            "filename": "api.js",
            "lineno": 946,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002713",
                "name": "pStmt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pStmt",
        "longname": "Database#\"prepare\"~pStmt",
        "kind": "member",
        "memberof": "Database#\"prepare\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32690,
                32723
            ],
            "filename": "api.js",
            "lineno": 950,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002727",
                "name": "stmt",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stmt",
        "longname": "Database#\"prepare\"~stmt",
        "kind": "member",
        "memberof": "Database#\"prepare\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32804,
                32833
            ],
            "filename": "api.js",
            "lineno": 954,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002745",
                "name": "this.statements[undefined]",
                "type": "Identifier",
                "value": "stmt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statements[undefined]",
        "longname": "Database#statements[undefined]",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Iterate over multiple SQL statements in a SQL string.\n     * This function returns an iterator over {@link Statement} objects.\n     * You can use a for...of loop to execute the returned statements one by one.\n     * @param {string} sql a string of SQL that can contain multiple statements\n     * @return {StatementIterator} the resulting statement iterator\n     * @example <caption>Get the results of multiple SQL queries</caption>\n     * const sql_queries = \"SELECT 1 AS x; SELECT '2' as y\";\n     * for (const statement of db.iterateStatements(sql_queries)) {\n     *     const sql = statement.getSQL(); // Get the SQL source\n     *     const result = statement.getAsObject({}); // Get the row of data\n     *     console.log(sql, result);\n     * }\n     * // This will print:\n     * // 'SELECT 1 AS x;' { x: 1 }\n     * // \" SELECT '2' as y\" { y: '2' }\n     */",
        "meta": {
            "range": [
                33734,
                33864
            ],
            "filename": "api.js",
            "lineno": 973,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002755",
                "name": "Database.prototype[\"iterateStatements\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "iterateStatements",
                "paramnames": [
                    "sql"
                ]
            }
        },
        "description": "Iterate over multiple SQL statements in a SQL string.\nThis function returns an iterator over {@link Statement} objects.\nYou can use a for...of loop to execute the returned statements one by one.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "a string of SQL that can contain multiple statements",
                "name": "sql"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "StatementIterator"
                    ]
                },
                "description": "the resulting statement iterator"
            }
        ],
        "examples": [
            "<caption>Get the results of multiple SQL queries</caption>\nconst sql_queries = \"SELECT 1 AS x; SELECT '2' as y\";\nfor (const statement of db.iterateStatements(sql_queries)) {\n    const sql = statement.getSQL(); // Get the SQL source\n    const result = statement.getAsObject({}); // Get the row of data\n    console.log(sql, result);\n}\n// This will print:\n// 'SELECT 1 AS x;' { x: 1 }\n// \" SELECT '2' as y\" { y: '2' }"
        ],
        "name": "[\"iterateStatements\"]",
        "longname": "Database#[\"iterateStatements\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Exports the contents of the database to a binary array\n    @return {Uint8Array} An array of bytes of the SQLite3 database file\n     */",
        "meta": {
            "range": [
                34013,
                34539
            ],
            "filename": "api.js",
            "lineno": 979,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002771",
                "name": "Database.prototype[\"export\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "exportDatabase",
                "paramnames": []
            },
            "vars": {
                "": null,
                "this.functions": "Database#functions",
                "binaryDb": "Database#\"export\"~binaryDb",
                "this.db": "Database#db"
            }
        },
        "description": "Exports the contents of the database to a binary array",
        "returns": [
            {
                "type": {
                    "names": [
                        "Uint8Array"
                    ]
                },
                "description": "An array of bytes of the SQLite3 database file"
            }
        ],
        "name": "[\"export\"]",
        "longname": "Database#[\"export\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34252,
                34271
            ],
            "filename": "api.js",
            "lineno": 984,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002813",
                "name": "this.functions",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functions",
        "longname": "Database#functions",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34338,
                34399
            ],
            "filename": "api.js",
            "lineno": 986,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002829",
                "name": "binaryDb",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "binaryDb",
        "longname": "Database#\"export\"~binaryDb",
        "kind": "member",
        "memberof": "Database#\"export\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34378,
                34396
            ],
            "filename": "api.js",
            "lineno": 986,
            "columnno": 52,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002839",
                "name": "encoding",
                "type": "Literal",
                "value": "binary"
            }
        },
        "undocumented": true,
        "name": "encoding",
        "longname": "module:SqlJs~encoding",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34473,
                34507
            ],
            "filename": "api.js",
            "lineno": 988,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002853",
                "name": "this.db",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "db",
        "longname": "Database#db",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Close the database, and all associated prepared statements.\n    * The memory associated to the database and all associated statements\n    * will be freed.\n    *\n    * **Warning**: A statement belonging to a database that has been closed\n    * cannot be used anymore.\n    *\n    * Databases **must** be closed when you're finished with them, or the\n    * memory consumption will grow forever\n     */",
        "meta": {
            "range": [
                34951,
                35439
            ],
            "filename": "api.js",
            "lineno": 1001,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002864",
                "name": "Database.prototype[\"close\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "close",
                "paramnames": []
            },
            "vars": {
                "": null,
                "this.functions": "Database#functions",
                "this.db": "Database#db"
            }
        },
        "description": "Close the database, and all associated prepared statements.\nThe memory associated to the database and all associated statements\nwill be freed.\n\n**Warning**: A statement belonging to a database that has been closed\ncannot be used anymore.\n\nDatabases **must** be closed when you're finished with them, or the\nmemory consumption will grow forever",
        "name": "[\"close\"]",
        "longname": "Database#[\"close\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35296,
                35315
            ],
            "filename": "api.js",
            "lineno": 1010,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002914",
                "name": "this.functions",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functions",
        "longname": "Database#functions",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35418,
                35432
            ],
            "filename": "api.js",
            "lineno": 1013,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002940",
                "name": "this.db",
                "type": "Literal",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "db",
        "longname": "Database#db",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Analyze a result code, return null if no error occurred, and throw\n    an error with a descriptive message otherwise\n    @nodoc\n     */",
        "meta": {
            "range": [
                35589,
                35835
            ],
            "filename": "api.js",
            "lineno": 1019,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002946",
                "name": "Database.prototype[\"handleError\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "handleError",
                "paramnames": [
                    "returnCode"
                ]
            },
            "vars": {
                "errmsg": "module:SqlJs~errmsg"
            }
        },
        "description": "Analyze a result code, return null if no error occurred, and throw\n    an error with a descriptive message otherwise",
        "tags": [
            {
                "originalTitle": "nodoc",
                "title": "nodoc",
                "text": ""
            }
        ],
        "name": "[\"handleError\"]",
        "longname": "Database#[\"handleError\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35672,
                35678
            ],
            "filename": "api.js",
            "lineno": 1020,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002957",
                "name": "errmsg"
            }
        },
        "undocumented": true,
        "name": "errmsg",
        "longname": "Database#\"handleError\"~errmsg",
        "kind": "member",
        "memberof": "Database#\"handleError\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                35763,
                35795
            ],
            "filename": "api.js",
            "lineno": 1024,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002967",
                "name": "errmsg",
                "type": "CallExpression",
                "funcscope": "Database#[\"handleError\"]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "errmsg",
        "longname": "module:SqlJs~errmsg",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "/** Returns the number of changed rows (modified, inserted or deleted)\n    by the latest completed INSERT, UPDATE or DELETE statement on the\n    database. Executing any other type of SQL statement does not modify\n    the value returned by this function.\n    @return {number} the number of rows modified\n    */",
        "meta": {
            "range": [
                36155,
                36270
            ],
            "filename": "api.js",
            "lineno": 1033,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002979",
                "name": "Database.prototype[\"getRowsModified\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "getRowsModified",
                "paramnames": []
            }
        },
        "description": "Returns the number of changed rows (modified, inserted or deleted)\n    by the latest completed INSERT, UPDATE or DELETE statement on the\n    database. Executing any other type of SQL statement does not modify\n    the value returned by this function.",
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "the number of rows modified"
            }
        ],
        "name": "[\"getRowsModified\"]",
        "longname": "Database#[\"getRowsModified\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "/** Register a custom `function` with SQLite\n    @example <caption>Register a simple function</caption>\n        db.create_function(\"addOne\", function (x) {return x+1;})\n        db.exec(\"SELECT addOne(1)\") // = 2\n    @param {string} name the name of the function as referenced in\n    SQL statements.\n    @param {function} func the actual function to be executed.\n    @return {Database} The database `object`. Useful for method chaining\n     */",
        "meta": {
            "range": [
                36723,
                40007
            ],
            "filename": "api.js",
            "lineno": 1045,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100002995",
                "name": "Database.prototype[\"create_function\"]",
                "type": "FunctionExpression",
                "funcscope": "module:SqlJs~Module.\"onRuntimeInitialized\"",
                "value": "create_function",
                "paramnames": [
                    "name",
                    "func"
                ]
            },
            "vars": {
                "wrapped_func": "Database#\"create_function\"~wrapped_func",
                "func_ptr": "Database#\"create_function\"~func_ptr",
                "this.functions[undefined]": "Database#functions[undefined]"
            }
        },
        "description": "Register a custom `function` with SQLite",
        "examples": [
            "<caption>Register a simple function</caption>\n        db.create_function(\"addOne\", function (x) {return x+1;})\n        db.exec(\"SELECT addOne(1)\") // = 2\n    "
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "the name of the function as referenced in\n    SQL statements.",
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "the actual function to be executed.",
                "name": "func"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Database"
                    ]
                },
                "description": "The database `object`. Useful for method chaining"
            }
        ],
        "name": "[\"create_function\"]",
        "longname": "Database#[\"create_function\"]",
        "kind": "function",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36832,
                39340
            ],
            "filename": "api.js",
            "lineno": 1049,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003006",
                "name": "wrapped_func",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "cx",
                    "argc",
                    "argv"
                ]
            },
            "vars": {
                "result": "module:SqlJs~result",
                "extract_blob": "Database\"create_function\"~wrapped_func~extract_blob",
                "args": "Database\"create_function\"~wrapped_func~args",
                "i": "module:SqlJs~i",
                "value_ptr": "Database\"create_function\"~wrapped_func~value_ptr",
                "value_type": "Database\"create_function\"~wrapped_func~value_type",
                "arg": "module:SqlJs~arg",
                "blobptr": "Database\"create_function\"~wrapped_func~blobptr"
            }
        },
        "undocumented": true,
        "name": "wrapped_func",
        "longname": "Database#\"create_function\"~wrapped_func",
        "kind": "function",
        "memberof": "Database#\"create_function\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36888,
                36894
            ],
            "filename": "api.js",
            "lineno": 1050,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003013",
                "name": "result"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Database\"create_function\"~wrapped_func~result",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36908,
                37270
            ],
            "filename": "api.js",
            "lineno": 1051,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003015",
                "name": "extract_blob",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "ptr"
                ]
            },
            "vars": {
                "size": "Database\"create_function\"~wrapped_func~extract_blob~size",
                "blob_ptr": "Database\"create_function\"~wrapped_func~extract_blob~blob_ptr",
                "blob_arg": "Database\"create_function\"~wrapped_func~extract_blob~blob_arg",
                "j": "module:SqlJs~j",
                "blob_arg[undefined]": "Database\"create_function\"~wrapped_func~extract_blob~blob_arg.undefined]"
            }
        },
        "undocumented": true,
        "name": "extract_blob",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob",
        "kind": "function",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                36957,
                36988
            ],
            "filename": "api.js",
            "lineno": 1052,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003020",
                "name": "size",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob~size",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func~extract_blob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37010,
                37044
            ],
            "filename": "api.js",
            "lineno": 1053,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003026",
                "name": "blob_ptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "blob_ptr",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob~blob_ptr",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func~extract_blob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37066,
                37097
            ],
            "filename": "api.js",
            "lineno": 1054,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003032",
                "name": "blob_arg",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "blob_arg",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob~blob_arg",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func~extract_blob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37124,
                37129
            ],
            "filename": "api.js",
            "lineno": 1055,
            "columnno": 25,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003039",
                "name": "j",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob~j",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func~extract_blob",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37141,
                37147
            ],
            "filename": "api.js",
            "lineno": 1055,
            "columnno": 42,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003045",
                "name": "j",
                "type": "Literal",
                "funcscope": "Database\"create_function\"~wrapped_func~extract_blob",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "module:SqlJs~j",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37171,
                37204
            ],
            "filename": "api.js",
            "lineno": 1056,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003050",
                "name": "blob_arg[undefined]",
                "type": "MemberExpression",
                "funcscope": "Database\"create_function\"~wrapped_func~extract_blob",
                "value": "HEAP8[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Database\"create_function\"~wrapped_func~extract_blob~blob_arg.undefined]",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func~extract_blob~blob_arg",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37287,
                37296
            ],
            "filename": "api.js",
            "lineno": 1060,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003062",
                "name": "args",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "Database\"create_function\"~wrapped_func~args",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37319,
                37324
            ],
            "filename": "api.js",
            "lineno": 1061,
            "columnno": 21,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003067",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Database\"create_function\"~wrapped_func~i",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37336,
                37342
            ],
            "filename": "api.js",
            "lineno": 1061,
            "columnno": 38,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003073",
                "name": "i",
                "type": "Literal",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "module:SqlJs~i",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37366,
                37409
            ],
            "filename": "api.js",
            "lineno": 1062,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003078",
                "name": "value_ptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value_ptr",
        "longname": "Database\"create_function\"~wrapped_func~value_ptr",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37431,
                37473
            ],
            "filename": "api.js",
            "lineno": 1063,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003089",
                "name": "value_type",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value_type",
        "longname": "Database\"create_function\"~wrapped_func~value_type",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37495,
                37498
            ],
            "filename": "api.js",
            "lineno": 1064,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003095",
                "name": "arg"
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "Database\"create_function\"~wrapped_func~arg",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37662,
                37699
            ],
            "filename": "api.js",
            "lineno": 1069,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003107",
                "name": "arg",
                "type": "CallExpression",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "module:SqlJs~arg",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37778,
                37813
            ],
            "filename": "api.js",
            "lineno": 1071,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003118",
                "name": "arg",
                "type": "CallExpression",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "module:SqlJs~arg",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37892,
                37921
            ],
            "filename": "api.js",
            "lineno": 1073,
            "columnno": 20,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003129",
                "name": "arg",
                "type": "CallExpression",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "module:SqlJs~arg",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37946,
                37956
            ],
            "filename": "api.js",
            "lineno": 1074,
            "columnno": 23,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003135",
                "name": "arg",
                "type": "Literal",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "module:SqlJs~arg",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38038,
                38069
            ],
            "filename": "api.js",
            "lineno": 1078,
            "columnno": 16,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003147",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "Database#\"create_function\"~wrapped_func",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "module:SqlJs~result",
        "kind": "member",
        "scope": "inner",
        "memberof": "module:SqlJs"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38787,
                38827
            ],
            "filename": "api.js",
            "lineno": 1097,
            "columnno": 28,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003217",
                "name": "blobptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "blobptr",
        "longname": "Database\"create_function\"~wrapped_func~blobptr",
        "kind": "member",
        "memberof": "Database\"create_function\"~wrapped_func",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39659,
                39703
            ],
            "filename": "api.js",
            "lineno": 1117,
            "columnno": 12,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003287",
                "name": "func_ptr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func_ptr",
        "longname": "Database#\"create_function\"~func_ptr",
        "kind": "member",
        "memberof": "Database#\"create_function\"",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                39713,
                39744
            ],
            "filename": "api.js",
            "lineno": 1118,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003294",
                "name": "this.functions[undefined]",
                "type": "Identifier",
                "value": "func_ptr",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functions[undefined]",
        "longname": "Database#functions[undefined]",
        "kind": "member",
        "memberof": "Database",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                40046,
                40072
            ],
            "filename": "api.js",
            "lineno": 1133,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100003324",
                "name": "Module.Database",
                "type": "Identifier",
                "value": "Database",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Database",
        "longname": "module:SqlJs~Module.Database",
        "kind": "member",
        "scope": "static",
        "memberof": "module:SqlJs~Module"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Alive.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Apple.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Energy.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Environment.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/HideConstructor.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Modules.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/NamespaceWithAlias.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/Tree.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/World.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/api.js",
            "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src/assets/script.js"
        ]
    },
    {
        "comment": "/**\n         * This is a number array.\n         * @constant\n         * @type Object\n         * @default\n         */",
        "meta": {
            "range": [
                1328,
                1416
            ],
            "filename": "Alive.js",
            "lineno": 46,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000016",
                "name": "this.NUMBER_ARRAY",
                "type": "ObjectExpression",
                "value": "{\"google\":\"Google\",\"games\":\"Games\"}",
                "paramnames": []
            }
        },
        "name": "NUMBER_ARRAY",
        "longname": "Apple#NUMBER_ARRAY",
        "kind": "constant",
        "description": "This is a number array.",
        "type": {
            "names": [
                "Object"
            ]
        },
        "defaultvalue": "{\"google\":\"Google\",\"games\":\"Games\"}",
        "defaultvaluetype": "object",
        "memberof": "Apple",
        "scope": "instance",
        "inherits": "Alive#NUMBER_ARRAY",
        "inherited": true,
        "overrides": "Alive#NUMBER_ARRAY"
    },
    {
        "comment": "/**\n     * A constant.\n     * @readonly\n     * @deprecated This is no longer used\n     */",
        "meta": {
            "range": [
                1521,
                1529
            ],
            "filename": "Alive.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000025",
                "name": "FOO",
                "type": "ClassProperty"
            }
        },
        "name": "FOO",
        "longname": "Apple#FOO",
        "kind": "member",
        "description": "A constant.",
        "readonly": true,
        "deprecated": "This is no longer used",
        "memberof": "Apple",
        "scope": "instance",
        "inherits": "Alive#FOO",
        "inherited": true,
        "overrides": "Alive#FOO"
    },
    {
        "comment": "/**\n     * @param {array<object|function|array|number|string|undefined|null|Symbol|boolean|Energy>} life This is an array of many things.\n     * @return {Energy} the energy wasted in this surviving instance\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu\n     * @method\n     * @deprecated\n     */",
        "meta": {
            "range": [
                1889,
                1931
            ],
            "filename": "Alive.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000027",
                "name": "Alive#survive",
                "type": "MethodDefinition",
                "paramnames": [
                    "life"
                ]
            },
            "vars": {
                "": null
            }
        },
        "name": "survive",
        "longname": "Apple#survive",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Energy"
                    ]
                },
                "description": "the energy wasted in this surviving instance"
            }
        ],
        "tags": [
            {
                "originalTitle": "link",
                "title": "link",
                "text": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu",
                "value": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu"
            }
        ],
        "deprecated": true,
        "memberof": "Apple",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "array.<(object|function()|array|number|string|undefined|null|Symbol|boolean|Energy)>"
                    ]
                },
                "description": "This is an array of many things.",
                "name": "life"
            }
        ],
        "inherits": "Alive#survive",
        "inherited": true,
        "overrides": "Alive#survive"
    },
    {
        "comment": "/**\n     * Text\n     * > Text\n     * \n     * \n     *```js\n     * code\n     *```\n     *\n     * \n     * > Note that commands are not matched in captions or in the middle of the text.\n     */",
        "meta": {
            "range": [
                2129,
                2169
            ],
            "filename": "Alive.js",
            "lineno": 80,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000034",
                "name": "Alive#gameQuery",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "name": "gameQuery",
        "longname": "Apple#gameQuery",
        "kind": "function",
        "description": "Text\n> Text\n\n\n```js\ncode\n```\n\n\n> Note that commands are not matched in captions or in the middle of the text.",
        "memberof": "Apple",
        "scope": "instance",
        "inherits": "Alive#gameQuery",
        "inherited": true,
        "overrides": "Alive#gameQuery"
    },
    {
        "comment": "/**\n         * This is a number array.\n         * @constant\n         * @type Object\n         * @default\n         */",
        "meta": {
            "range": [
                1328,
                1416
            ],
            "filename": "Alive.js",
            "lineno": 46,
            "columnno": 8,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000016",
                "name": "this.NUMBER_ARRAY",
                "type": "ObjectExpression",
                "value": "{\"google\":\"Google\",\"games\":\"Games\"}",
                "paramnames": []
            }
        },
        "name": "NUMBER_ARRAY",
        "longname": "Tree#NUMBER_ARRAY",
        "kind": "constant",
        "description": "This is a number array.",
        "type": {
            "names": [
                "Object"
            ]
        },
        "defaultvalue": "{\"google\":\"Google\",\"games\":\"Games\"}",
        "defaultvaluetype": "object",
        "memberof": "Tree",
        "scope": "instance",
        "inherits": "Alive#NUMBER_ARRAY",
        "inherited": true,
        "overrides": "Alive#NUMBER_ARRAY"
    },
    {
        "comment": "/**\n     * A constant.\n     * @readonly\n     * @deprecated This is no longer used\n     */",
        "meta": {
            "range": [
                1521,
                1529
            ],
            "filename": "Alive.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000025",
                "name": "FOO",
                "type": "ClassProperty"
            }
        },
        "name": "FOO",
        "longname": "Tree#FOO",
        "kind": "member",
        "description": "A constant.",
        "readonly": true,
        "deprecated": "This is no longer used",
        "memberof": "Tree",
        "scope": "instance",
        "inherits": "Alive#FOO",
        "inherited": true,
        "overrides": "Alive#FOO"
    },
    {
        "comment": "/**\n     * @param {array<object|function|array|number|string|undefined|null|Symbol|boolean|Energy>} life This is an array of many things.\n     * @return {Energy} the energy wasted in this surviving instance\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu\n     * @method\n     * @deprecated\n     */",
        "meta": {
            "range": [
                1889,
                1931
            ],
            "filename": "Alive.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000027",
                "name": "Alive#survive",
                "type": "MethodDefinition",
                "paramnames": [
                    "life"
                ]
            },
            "vars": {
                "": null
            }
        },
        "name": "survive",
        "longname": "Tree#survive",
        "kind": "function",
        "returns": [
            {
                "type": {
                    "names": [
                        "Energy"
                    ]
                },
                "description": "the energy wasted in this surviving instance"
            }
        ],
        "tags": [
            {
                "originalTitle": "link",
                "title": "link",
                "text": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu",
                "value": "https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event context-menu"
            }
        ],
        "deprecated": true,
        "memberof": "Tree",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "array.<(object|function()|array|number|string|undefined|null|Symbol|boolean|Energy)>"
                    ]
                },
                "description": "This is an array of many things.",
                "name": "life"
            }
        ],
        "inherits": "Alive#survive",
        "inherited": true,
        "overrides": "Alive#survive"
    },
    {
        "comment": "/**\n     * Text\n     * > Text\n     * \n     * \n     *```js\n     * code\n     *```\n     *\n     * \n     * > Note that commands are not matched in captions or in the middle of the text.\n     */",
        "meta": {
            "range": [
                2129,
                2169
            ],
            "filename": "Alive.js",
            "lineno": 80,
            "columnno": 4,
            "path": "/Users/gbisurgi/Sites/temp/clean-jsdoc-theme/demo/src",
            "code": {
                "id": "astnode100000034",
                "name": "Alive#gameQuery",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "name": "gameQuery",
        "longname": "Tree#gameQuery",
        "kind": "function",
        "description": "Text\n> Text\n\n\n```js\ncode\n```\n\n\n> Note that commands are not matched in captions or in the middle of the text.",
        "memberof": "Tree",
        "scope": "instance",
        "inherits": "Alive#gameQuery",
        "inherited": true,
        "overrides": "Alive#gameQuery"
    }
]
